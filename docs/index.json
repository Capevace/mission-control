[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "app/auth/index.js",
    "content": "const path = require('path');\nconst fs = require('fs/promises');\nconst passport = require('passport');\nconst LocalStrategy = require('passport-local').Strategy;\nconst jwt = require('jsonwebtoken');\n\nconst logger = require('@helpers/logger').createLogger('Auth');\nconst crypto = require('@helpers/crypto');\n\n// const initRoutes = require('./database-api');\n\n/**\n * AUTH MODULE\n * middleware\n *     passport\n *     requireAuthentication\n *     logout\n * controller\n *     composeLoginPage\n *     performAuthentication\n * tokens\n *     generateJWT\n *     verifyJWT\n * api\n * \t   updateUserMeta\n * \t   updateUsername\n * \t   updateUserPassword\n * \t   updateUserRole\n * permissions\n *     canEditUser\n */\n\n\n\nmodule.exports = function initAuth(config, db, sessionSecret) {\n    const api = db.api.users;\n\n    passport.use(\n        'local',\n        new LocalStrategy(\n                {\n                usernameField: 'username',\n                passwordField: 'password'\n            },\n            async (username, password, done) => {\n                const user = await api.findUser(username);\n\n                if (password === user.password || user && (await crypto.comparePassword(password, user.password))) {\n                    return done(null, user);\n                }\n\n                return done(null, false);\n            }\n        )\n    );\n\n    passport.serializeUser(function(user, cb) {\n        cb(null, user.username);\n    });\n\n    passport.deserializeUser(async function(username, cb) {\n        const user = await api.findUser(username);\n\n        if (!user) return cb(null, false);\n\n        return cb(null, user);\n    });\n\n    return {\n        passport,\n        \n        middleware: {\n        \t/** \n        \t * The initialized passport instance\n        \t */\n        \tpassport,\n\n            /**\n             * Middleware to redirect based on the auth state.\n             *\n             * If 'next' is passed for any of the arguments,\n             * the middleware will call the next function instead\n             * of redirecting.\n             *\n             * @param {string} loggedInUrl URL to redirect to if logged in\n             * @param {string} loggedOutUrl URL to redirect to if logged out\n             */\n            requireAuthentication(req, res, next) {\n                if (req.isAuthenticated()) {\n                    next();\n                } else {\n                    res.redirect('/login');\n                }\n            },\n\n            /**\n             * Logout user\n             * @param  {Request} req\n             * @param  {Response} res\n             */\n            logout(req, res) {\n            \treq.logout();\n\n            \tres.redirect('/login');\n            }\n        },\n        controller: {\n        \t/**\n        \t * Compose the login page HTML.\n        \t * @return {string} The login page HTML.\n        \t */\n        \tasync serveLoginPage(req, res) {\n        \t\tconst errors = req.flash('error');\n\t            let content = await fs.readFile(path.resolve(__dirname,'../views/login.html'));\n\n\t            content = content.toString()\n\t                .replace(\n\t                    '{{ERROR_MSG}}',\n\t                    errors.length > 0\n\t                        ? `<p class=\"error-msg\">${errors[0]}</p>`\n\t                        : ''\n\t                )\n\t                .replace(/\\{\\{URL\\}\\}/g, config.http.url);\n\n\t            res.send(content);\n\t        },\n\n\t        /**\n\t         * Perform authentication and log in the user.\n\t         */\n\t        performAuthentication: passport.authenticate('local', {\n\t            failureRedirect: '/login',\n\t            successRedirect: '/',\n\t            failureFlash: 'Incorrect username or password.'\n\t        }),\n\n\t        updateUser(user, newUsername) {\n\n\t        }\n        },\n\n        tokens: {\n            generate(user) {\n                return jwt.sign({ user: { username: user.username } }, sessionSecret, {\n                    expiresIn: 86400,\n                    issuer: 'mission-control',\n                    audience: 'mission-control:api'\n                });\n            },\n            verify(token) {\n                try {\n                    return jwt.verify(token, sessionSecret, {\n                    \texpiresIn: 86400,\n                        issuer: 'mission-control',\n                        audience: 'mission-control:api'\n                    });\n                } catch (e) {\n                    logger.debug('Error verifying JWT', e);\n                    return false;\n                }\n            },\n        },\n\n        permissions: {\n            /**\n             * Can the user edit user data.\n             * \n             * @param  {User} user The user that's making the edit.\n             * @param  {string} usernameToEdit The username of the user that's being edited.\n             * @return {boolean}\n             */\n            canEditUser(currentUser, usernameToEdit) {\n                // Guests are not allowed to change usernames\n                if (currentUser.role === 'guest')\n                    return false;\n\n                // Only allowed if username is the same, or the editing user is an admin\n                if (currentUser.username !== usernameToEdit && currentUser.role !== 'admin')\n                    return false;\n\n                return true;\n            }\n        }\n    };\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/auth/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "path",
    "memberof": "app/auth/index.js",
    "static": true,
    "longname": "app/auth/index.js~path",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/auth/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "fs",
    "memberof": "app/auth/index.js",
    "static": true,
    "longname": "app/auth/index.js~fs",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/auth/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "passport",
    "memberof": "app/auth/index.js",
    "static": true,
    "longname": "app/auth/index.js~passport",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/auth/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "LocalStrategy",
    "memberof": "app/auth/index.js",
    "static": true,
    "longname": "app/auth/index.js~LocalStrategy",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/auth/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "jwt",
    "memberof": "app/auth/index.js",
    "static": true,
    "longname": "app/auth/index.js~jwt",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/auth/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/auth/index.js",
    "static": true,
    "longname": "app/auth/index.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/auth/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "crypto",
    "memberof": "app/auth/index.js",
    "static": true,
    "longname": "app/auth/index.js~crypto",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/auth/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "exports",
    "memberof": "app/auth/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/auth/index.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/auth/index.js",
    "importStyle": null,
    "description": "AUTH MODULE\nmiddleware\n    passport\n    requireAuthentication\n    logout\ncontroller\n    composeLoginPage\n    performAuthentication\ntokens\n    generateJWT\n    verifyJWT\napi\n\t   updateUserMeta\n\t   updateUsername\n\t   updateUserPassword\n\t   updateUserRole\npermissions\n    canEditUser",
    "lineNumber": 35,
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "db",
        "types": [
          "*"
        ]
      },
      {
        "name": "sessionSecret",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "app/auth/types.js",
    "content": "/**\n * User object\n * @typedef {express.Router} User\n * @type {object}\n * @property {string} username Username\n * @property {string} password Password (hashed)\n * @property {string} avatarUrl URL to the avatar\n * @property {string} displayName The name but nice\n */",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/auth/types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "typedef",
    "name": "User",
    "memberof": "app/auth/types.js",
    "static": true,
    "longname": "app/auth/types.js~User",
    "access": "public",
    "description": "User object",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "Username"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "Password (hashed)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "avatarUrl",
        "description": "URL to the avatar"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "displayName",
        "description": "The name but nice"
      }
    ],
    "type": {
      "types": [
        "express.Router"
      ],
      "optional": false,
      "name": "User"
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "app/config.js",
    "content": "/**\n * Config Module\n *\n * This module exports the config object.\n * It generates some dynamic parts but should be customizable.\n *\n * @todo  Make it more dynamic by loading a json file.\n *\n * @module @config\n * @since 1.0.0\n * @requires rc\n */\n\nconst fs = require('fs');\nconst path = require('path');\nconst internalIp = require('internal-ip');\nconst logging = require('./helpers/logger');\nconst logger = logging.createLogger('Config', 'cyan');\nconst argv = require('./helpers/argv');\nconst pkg = require('../package.json');\n\nconst basePath = false // Todo: Linux detection here\n\t? '/etc/mission-control'\n\t: require('os').homedir() + '/.mission-control';\n\nlet config = require('rc')('mission-control', {\n\tversion: pkg.version,\n\tbasePath,\n\tlogLevel: 'http',\n\tdebug: false,\n\tauth: {\n\t\turl: '/sso',\n\t\tissuer: 'mission-control-sso',\n\t\taudience: 'mission-control',\n\t\tsecret: 'applepie',\n\t\tport: 3001,\n\t\tproxy: true\n\t},\n\thttp: {\n\t\turl: `http://${internalIp.v4.sync()}:3000`,\n\t\tport: process.env.PORT || 3000,\n\t\tallowedDomains: []\n\t},\n\tdashboard: {\n\t\tpath: path.resolve(\n\t\t\t__dirname,\n\t\t\t'../resources/dashboard-ui'\n\t\t), // static ui path\n\t},\n\thomebridge: {\n\t\tpin: null,\n\t},\n\tspotify: {\n\t\tpath: path.resolve(\n\t\t\t__dirname,\n\t\t\t'../resources/spotify-ui'\n\t\t), // ui path\n\t\tclientId: '', // 'f1421bd3dada404da546902b6849f2d7',\n\t\tsecret: '' // '2192e52bff6740cb8dbce0011305bb20'\n\t},\n\tifttt: {\n\t\ttoken: 'dq0U6fRhl-t35dc_HnDem5'\n\t},\n\tdatabasePath: basePath + '/database.json',\n\tstoragePath: basePath + '/storage',\n});\n\nif (!fs.existsSync(config.basePath)) {\n\tlogger.warn('Base path not found. Creating base directory ' + config.basePath);\n\n\tfs.mkdirSync(config.basePath, { recursive: true });\n}\n\nif (!fs.existsSync(config.basePath + '/config')) {\n\tlogger.warn('Config file not found. Creating...');\n\n\tfs.writeFileSync(config.basePath + '/config',\n\t\t`; Mission Control Config File\n\n; Enable debug mode here\n;debug=true\n\n;[http]\n;url=/sso\n;port=3000\n;allowedDomains[]=url1.com\n;allowedDomains[]=url2.com\n; Allowed Urls will also contain http.url\n\n;[homebridge]\n;pin=\n\n;[spotify]\n;clientId=\n;secret=\n\n;[ifttt]\n;token=\n\n`\n\t);\n}\n\n// if (!fs.existsSync(config.basePath + '/storage')) {\n// \tlogger.warn('Base path not found. Creating base directory ' + config.basePath);\n//\n// \tfs.mkdirSync(config.basePath, { recursive: true });\n// }\n\nif (argv.logLevel) {\n\tconfig.logLevel = argv.logLevel;\n}\n\nif (argv.url) {\n\tconfig.http.url = argv.url;\n}\n\nif (argv.port) {\n\tconfig.http.port = argv.port;\n}\n\nif (argv.authUrl) {\n\tconfig.auth.url = argv.authUrl;\n}\n\nif (argv.authPort) {\n\tconfig.auth.port = argv.authPort;\n}\n\nif (argv.debug) {\n\tconfig.debug = argv.debug;\n}\n\nif (argv.proxy) {\n\tconfig.auth.proxy = argv.proxy;\n}\n\nif (config.debug) {\n\tconfig.logLevel = 'debug';\n}\n\n// Set debug mode\nlogging.setLogLevel(config.logLevel);\n\nif (config.http.allowedDomains.length === 0) {\n\tconst url = new URL(config.http.url);\n\n\tconfig.http.allowedDomains.push(\n\t\t`${url.hostname}${url.port ? ':' + url.port : ''}`\n\t);\n}\n\nmodule.exports = config;",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "fs",
    "memberof": "app/config.js",
    "static": true,
    "longname": "app/config.js~fs",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/config.js",
    "importStyle": null,
    "description": "Config Module\n\nThis module exports the config object.\nIt generates some dynamic parts but should be customizable.",
    "lineNumber": 14,
    "since": "1.0.0",
    "todo": [
      " Make it more dynamic by loading a json file."
    ],
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": ""
      },
      {
        "tagName": "@config\n",
        "tagValue": ""
      },
      {
        "tagName": "@requires",
        "tagValue": "rc"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "path",
    "memberof": "app/config.js",
    "static": true,
    "longname": "app/config.js~path",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "internalIp",
    "memberof": "app/config.js",
    "static": true,
    "longname": "app/config.js~internalIp",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "logging",
    "memberof": "app/config.js",
    "static": true,
    "longname": "app/config.js~logging",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/config.js",
    "static": true,
    "longname": "app/config.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "argv",
    "memberof": "app/config.js",
    "static": true,
    "longname": "app/config.js~argv",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "name": "pkg",
    "memberof": "app/config.js",
    "static": true,
    "longname": "app/config.js~pkg",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "basePath",
    "memberof": "app/config.js",
    "static": true,
    "longname": "app/config.js~basePath",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "name": "config",
    "memberof": "app/config.js",
    "static": true,
    "longname": "app/config.js~config",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "app/database/api/users.js",
    "content": "const User = require('@database/models/User');\nconst crypto = require('@helpers/crypto');\nconst logger = require('@helpers/logger').createLogger('Database', 'magenta');\n\nmodule.exports = function initAPI(db) {\n\tconst foundUsers = null//db.get('users', null);\n\tconst tempPassword = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n\n\t// If no users are present, we generate a temporary user account and tell the user in the console\n\tif (!foundUsers || Object.keys(foundUsers.length)) {\n\t\tlogger.newLine();\n\t\tlogger.warn('=========================================================');\n\t\tlogger.newLine();\n\t\tlogger.warn('No registered users found in DB!');\n\t\tlogger.warn(`Enabling admin account 'temp' with password '${tempPassword}'`);\n\t\tlogger.newLine();\n\t\tlogger.warn('=========================================================');\n\t\tlogger.newLine();\n\t}\n\n\tconst api = {\n\t\t_set: async (users) => db.set('users', users),\n\t\tasync getAll() {\n\t\t\treturn db.get('users', { 'temp': User.composeTempUser(tempPassword) });\n\t\t},\n\t\tasync findUser(username) {\n\t\t\treturn (await api.getAll())[username];\n\t\t},\n\n\t\t/**\n\t\t * Update the user meta in DB (display name and avatar url).\n\t\t *\n\t\t * This method does NOT allow changing the password.\n\t\t * Only do this with `api.users.updatePassword(<username>, <unhashed-password>)`.\n\t\t *\n\t\t * @param  {string} username Username\n\t\t * @param  {User} user The user object\n\t\t * @return {void}\n\t\t */\n\t\tasync updateMeta(username, { avatarUrl, displayName }) {\n\t\t\tlet users = await api.getUsers();\n\n\t\t\tif (!users[username])\n\t\t\t\tthrow new Error(`User ${username} could not be found`);\n\n\t\t\t// Password can not be changed in the update method\n\t\t\tusers[username] = User.validate({\n\t\t\t\t...users[user.username],\n\t\t\t\tavatarUrl,\n\t\t\t\tdisplayName\n\t\t\t});\n\n\t\t\tawait api._set(users);\n\t\t},\n\n\t\t/**\n\t\t * Update the user meta in DB (display name and avatar url).\n\t\t *\n\t\t * This method does NOT allow changing the password.\n\t\t * Only do this with `api.users.updatePassword(<username>, <unhashed-password>)`.\n\t\t *\n\t\t * @param  {string} username Username\n\t\t * @param  {User} user The user object\n\t\t * @return {void}\n\t\t */\n\t\tasync updateUsername(username, newUsername) {\n\t\t\tlet users = await api.getUsers();\n\n\t\t\tif (!users[username])\n\t\t\t\tthrow new Error(`User ${username} could not be found`);\n\n\t\t\tif (!users[newUsername])\n\t\t\t\tthrow new Error(`Cannot change username. User ${newUsername} already exists.`);\n\n\t\t\tlogger.info(`Changing username from ${username} to ${newUsername}`);\n\n\t\t\tconst newUser = User.validate({\n\t\t\t\t...users[username],\n\t\t\t\tusername: newUsername\n\t\t\t});\n\n\t\t\tdelete users[username];\n\t\t\tusers[newUsername] = newUser;\n\n\t\t\tawait api._set(users);\n\t\t},\n\n\t\t/**\n\t\t * Hash a users password and save it to DB.\n\t\t * \n\t\t * @param  {string} username\n\t\t * @param  {string} password\n\t\t */\n\t\tasync updatePassword(username, password) {\n\t\t\tlet users = await api.getUsers();\n\n\t\t\tif (!users[username])\n\t\t\t\tthrow new Error(`User ${username} could not be found`);\n\n\t\t\tusers[username] = User.validate({\n\t\t\t\t...users[username],\n\t\t\t\tpassword: crypto.hashPasswordSync(password)\n\t\t\t});\n\n\t\t\tawait api._set(users);\n\t\t}\n\t};\n\n\treturn api;\n}",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/database/api/users.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "User",
    "memberof": "app/database/api/users.js",
    "static": true,
    "longname": "app/database/api/users.js~User",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/api/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "crypto",
    "memberof": "app/database/api/users.js",
    "static": true,
    "longname": "app/database/api/users.js~crypto",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/api/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/database/api/users.js",
    "static": true,
    "longname": "app/database/api/users.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/api/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "exports",
    "memberof": "app/database/api/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/database/api/users.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/api/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "db",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "app/database/index.js",
    "content": "/**\n * Database Module\n * @module @database\n * @since 1.0.0\n */\nconst logger = require('@helpers/logger').createLogger('Database', 'cyan');\nconst config = require('@config');\nconst fs = require('fs');\n\nlet database = {};\n\n// If the storage folder doesnt exist, create it\nif (!fs.existsSync(config.storagePath)) {\n\tlogger.warn(\"Storage folder doesn't exist. Creating /storage.\");\n\tfs.mkdirSync(config.storagePath, { recursive: true });\n}\n\n// If the database.json file doenst exist, create it\n// Otherwise, read from it and populate the database.\nif (!fs.existsSync(config.databasePath)) {\n\tfs.writeFileSync(config.databasePath, '{}');\n} else {\n\tdatabase = require(config.databasePath);\n}\n\n/**\n * Set an object in the database to a given value.\n *\n * This function is used to save data permanently to the database.\n * Saves on every set.\n *\n * @todo  More object setting than 1 level deep.\n *\n * @param {String} key - The database object key to query. For now, only 1 level deep.\n * @param {any} value - The value you want to set.\n */\nmodule.exports.set = function set(key, value) {\n\tdatabase[key] = value;\n\n\t// Save the database to disk\n\tfs.writeFileSync(\n\t\tconfig.databasePath,\n\t\tJSON.stringify(database, null, 2),\n\t\terr => {\n\t\t\tif (err) logger.error('Error writing database file', err);\n\t\t}\n\t);\n};\n\n/**\n * Retrieve data from a database with a given key.\n *\n * @todo  multi-level getting\n *\n * @param  {String} key - The key to retrieve from the database. (1-level deep)\n * @return {Object} The object from the database.\n */\nmodule.exports.get = function get(key, defaultValue) {\n\treturn database[key] || defaultValue;\n};\n\n/**\n * The database API to safely interact with the database.\n * @type {Object}\n */\nmodule.exports.api = {\n\t/**\n\t * The users API.\n\t * @type {Object}\n\t */\n\tusers: require('./api/users')(module.exports)\n};\n\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/database/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/database/index.js",
    "static": true,
    "longname": "app/database/index.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/index.js",
    "importStyle": null,
    "description": "Database Module",
    "lineNumber": 6,
    "since": "1.0.0",
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": ""
      },
      {
        "tagName": "@database\n",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "config",
    "memberof": "app/database/index.js",
    "static": true,
    "longname": "app/database/index.js~config",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "fs",
    "memberof": "app/database/index.js",
    "static": true,
    "longname": "app/database/index.js~fs",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "database",
    "memberof": "app/database/index.js",
    "static": true,
    "longname": "app/database/index.js~database",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "set",
    "memberof": "app/database/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/database/index.js~set",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/index.js",
    "importStyle": null,
    "description": "Set an object in the database to a given value.\n\nThis function is used to save data permanently to the database.\nSaves on every set.",
    "lineNumber": 37,
    "todo": [
      " More object setting than 1 level deep."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The database object key to query. For now, only 1 level deep."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value you want to set."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "get",
    "memberof": "app/database/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/database/index.js~get",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/index.js",
    "importStyle": null,
    "description": "Retrieve data from a database with a given key.",
    "lineNumber": 58,
    "todo": [
      " multi-level getting"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The key to retrieve from the database. (1-level deep)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The object from the database."
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "app/database/models/User.js",
    "content": "const Joi = require('joi');\n\nconst crypto = require('@helpers/crypto');\nconst composeModel = require('./compose-model');\n\nmodule.exports.User = composeModel(Joi.object({\n\tusername: Joi.string()\n\t\t.alphanum()\n\t\t.min(3)\n\t\t.max(32)\n\t\t.lowercase()\n\t\t.trim()\n\t\t.required(),\n\n\tpassword: Joi.string(),\n\n\tdisplayName: Joi.string()\n\t\t.min(1)\n\t\t.max(32)\n\t\t.trim()\n\t\t.required(),\n\n\tavatarUrl: Joi.string()\n\t\t.trim()\n\t\t.max(512)\n\t\t.uri(),\n\n\trole: Joi.string()\n\t\t.pattern(/^admin$|^user$|^guest$/, 'role')\n\t\t.required()\n}));\n\nmodule.exports.User.composeTempUser = function composeTempUser(password) {\n\treturn {\n\t\tusername: 'temp',\n\t\tpassword: crypto.hashPasswordSync(tempPassword),\n\t\tdisplayName: 'Temp Admin',\n\t\tavatarUrl: 'https://static.wikia.nocookie.net/geosheas-lost-episodes/images/c/c0/Shrekednijrfiugbqg4iuhrqipugheipug.jpg/revision/latest?cb=20200809223801',\n\t\trole: 'admin'\n\t};\n}",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/database/models/User.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "Joi",
    "memberof": "app/database/models/User.js",
    "static": true,
    "longname": "app/database/models/User.js~Joi",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/models/User.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "crypto",
    "memberof": "app/database/models/User.js",
    "static": true,
    "longname": "app/database/models/User.js~crypto",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/models/User.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "composeModel",
    "memberof": "app/database/models/User.js",
    "static": true,
    "longname": "app/database/models/User.js~composeModel",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/models/User.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "composeTempUser",
    "memberof": "app/database/models/User.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/database/models/User.js~composeTempUser",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/models/User.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "password",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"username\": string, \"password\": *, \"displayName\": string, \"avatarUrl\": string, \"role\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "app/database/models/compose-model.js",
    "content": "module.exports = function composeModel(schema) {\n\treturn {\n\t\tschema,\n\t\tvalidate: (data) => {\n\t\t\tconst { error, value } = schema.validate(data);\n\n\t\t\tif (error) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t}\n}",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/database/models/compose-model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "exports",
    "memberof": "app/database/models/compose-model.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/database/models/compose-model.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/database/models/compose-model.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "schema",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"schema\": *, \"validate\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "app/helpers/add-trailing-slash-middleware.js",
    "content": "/**\n * Express middleware to force a trailing slash onto a route.\n *\n * e.g.\n * /dashboard -> /dashboard/\n */\nmodule.exports = function addTrailingSlashMiddleware(req, res, next) {\n\tif (req.url.slice(-1) !== '/') {\n\t\tres.redirect(301, req.url + '/');\n\t} else {\n\t\tnext();\n\t}\n}",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/helpers/add-trailing-slash-middleware.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "exports",
    "memberof": "app/helpers/add-trailing-slash-middleware.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/add-trailing-slash-middleware.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/add-trailing-slash-middleware.js",
    "importStyle": null,
    "description": "Express middleware to force a trailing slash onto a route.\n\ne.g.\n/dashboard -> /dashboard/",
    "lineNumber": 7,
    "params": [
      {
        "name": "req",
        "types": [
          "*"
        ]
      },
      {
        "name": "res",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "file",
    "name": "app/helpers/argv.js",
    "content": "const pkg = require('../../package.json');\nconst { program } = require('commander');\nprogram\n\t.version(pkg.version)\n\t.option('-u, --url <url>', 'the url mission control is reachable at')\n\t.option('-p, --port <port>', 'the port to use for mission control')\n\t.option('--no-sso', 'disable internal auth server process (to use own)')\n\t.option('--no-proxy', 'disable proxiing of the single sign on server')\n\t.option('--auth-url <url>', 'the url to use for the single-sign-on server')\n\t.option('--auth-port <port>', 'the port to use for the single-sign-on server')\n\t.option('-l, --log-level <level>', 'set the log level')\n\t.option('-d, --debug', 'enable debug mode')\n\t.option('-s, --silent', 'disable all output');\n\nprogram.parse(process.argv);\n\nmodule.exports = program;",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/helpers/argv.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "pkg",
    "memberof": "app/helpers/argv.js",
    "static": true,
    "longname": "app/helpers/argv.js~pkg",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/argv.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "program",
    "memberof": "app/helpers/argv.js",
    "static": true,
    "longname": "app/helpers/argv.js~program",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/argv.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "app/helpers/crypto.js",
    "content": "const bcrypt = require('bcrypt');\n\n/**\n * Compare a password to a hash to see if they match.\n * @async\n * @param  {string} password The unhashed password to check.\n * @param  {string} hash     The hashed password to check against.\n * @return {bool} True if the passwords do match.\n */\nmodule.exports.comparePassword = async function comparePassword(password, hash) {\n\ttry {\n\t\tconst match = await bcrypt.compare(password, hash);\n\n\t\treturn match;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\n/**\n * Generate a hash for a given password.\n * @param  {string} password The password to hash.\n * @return {string}          The hash.\n */\nmodule.exports.hashPassword = async function hashPassword(password) {\n\treturn await bcrypt.hash(password, 10);\n};\n\n/**\n * Generate a hash for a given password, but sync.\n * @param  {string} password The password to hash.\n * @return {string}          The hash.\n */\nmodule.exports.hashPasswordSync = function hashPasswordSync(password) {\n\treturn bcrypt.hashSync(password, 10);\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/helpers/crypto.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "bcrypt",
    "memberof": "app/helpers/crypto.js",
    "static": true,
    "longname": "app/helpers/crypto.js~bcrypt",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "comparePassword",
    "memberof": "app/helpers/crypto.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/helpers/crypto.js~comparePassword",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/crypto.js",
    "importStyle": null,
    "description": "Compare a password to a hash to see if they match.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The unhashed password to check."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "hash",
        "description": "The hashed password to check against."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "bool"
      ],
      "spread": false,
      "description": "True if the passwords do match."
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "hashPassword",
    "memberof": "app/helpers/crypto.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/helpers/crypto.js~hashPassword",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/crypto.js",
    "importStyle": null,
    "description": "Generate a hash for a given password.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The password to hash."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The hash."
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "hashPasswordSync",
    "memberof": "app/helpers/crypto.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/crypto.js~hashPasswordSync",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/crypto.js",
    "importStyle": null,
    "description": "Generate a hash for a given password, but sync.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The password to hash."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The hash."
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "app/helpers/logger.js",
    "content": "/**\n * Logging Helpers\n * @module @helpers/log\n * @requires chalk, qrcode-terminal\n */\n\nconst chalk = require('chalk');\nconst qrcode = require('qrcode-terminal');\nconst onFinished = require('on-finished');\nconst cliProgress = require('cli-progress');\n\nlet logBuffer = [];\nlet progressBar = null;\n\nconst console_log = console.log.bind(console);\n\nmodule.exports._log = function _log(...msgs) {\n\tif (progressBar)\n\t\tlogBuffer.push(msgs);\n\telse\n\t\tconsole_log(...msgs); // eslint-disable-line\n};\n\nmodule.exports.newLine = function newLine() {\n\tmodule.exports._log('');\n};\n\nconst LogLevel = {\n\tdebug: 0,\n\thttp: 1,\n\tinfo: 2,\n\twarn: 3,\n\terror: 4,\n\tfatal: 5,\n\tsilent: 6\n};\nmodule.exports.LogLevel = LogLevel;\n\n\n/**\n * Return a LogLevel from string.\n * @param {string} level \n * @returns LogLevel | null\n */\nmodule.exports.logLevelFromString = function logLevelFromString(level) {\n\treturn LogLevel[level];\n};\n\n/**\n * Convert a LogLevel to string.\n * @param {LogLevel} logLevel \n * @returns string | null\n */\nmodule.exports.logLevelToString = function logLevelToString(logLevel) {\n\tlet text = null;\n\n\tswitch (logLevel) {\n\t\tcase 0:\n\t\t\ttext = chalk.green('DEBUG');\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\ttext = chalk.magenta('HTTP');\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\ttext = chalk.cyan('INFO');\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\ttext = chalk.yellow('WARN');\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\ttext = chalk.red('ERROR');\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\ttext = chalk.red.bgBlack('FATAL');\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\ttext = chalk.white.bgBlack('SILENT');\n\t\t\tbreak;\n\t}\n\n\treturn text;\n};\n\n/**\n * Create a log function with a LogLevel label attached.\n * @param {LogLevel} levelOfLogger\n * @returns Function\n */\nfunction createLogFunction(levelOfLogger) {\n\tconst label = module.exports.logLevelToString(levelOfLogger);\n\n\treturn function log(...msgs) {\n\t\tif (logLevel <= levelOfLogger)\n\t\t\tmodule.exports._log(/*formatISO(new Date()),*/ label, ...msgs);\n\t};\n}\n\n/**\n * The global log level.\n */\nlet logLevel = LogLevel.http;\n\n/*\n * The respective log functions.\n */\nconst debug = createLogFunction(LogLevel.debug);\nconst http = createLogFunction(LogLevel.http);\nconst info = createLogFunction(LogLevel.info);\nconst warn = createLogFunction(LogLevel.warn);\nconst error = createLogFunction(LogLevel.error);\nconst fatal = createLogFunction(LogLevel.fatal);\n\nmodule.exports.debug = debug;\nmodule.exports.http = http;\nmodule.exports.info = info;\nmodule.exports.warn = warn;\nmodule.exports.error = error;\nmodule.exports.fatal = fatal;\n\n\n/**\n * Create a logger with text label attached.\n * @param {string} label\n * @param {string} color\n */\nmodule.exports.createLogger = function createLogger(label, color = 'reset') {\n\tif (!label)\n\t\treturn {\n\t\t\tnewLine: module.exports.newLine,\n\t\t\tdebug,\n\t\t\thttp,\n\t\t\tinfo,\n\t\t\twarn,\n\t\t\terror,\n\t\t\tfatal\n\t\t};\n\n\tconst colorFn = chalk[color];\n\n\tif (!colorFn)\n\t\tthrow new Error(`Log color unsupported: ${color}`);\n\n\tlabel = colorFn(label);\n\n\treturn {\n\t\tnewLine: module.exports.newLine,\n\t\tdebug: (...msgs) => debug(label, ...msgs),\n\t\thttp: (...msgs) => http(label, ...msgs),\n\t\tinfo: (...msgs) => info(label, ...msgs),\n\t\twarn: (...msgs) => warn(label, ...msgs),\n\t\terror: (...msgs) => error(label, ...msgs),\n\t\tfatal: (...msgs) => fatal(label, ...msgs)\n\t};\n};\n\n/**\n * Set the global log level.\n * @param {LogLevel} level \n */\nmodule.exports.setLogLevel = function setLogLevel(levelString = 'debug') {\n\tif (!levelString)\n\t\treturn;\n\n\t// If we can parse a log level from the logLevel config, then a string was passed and we can\n\t// parse the log level value.\n\tlogLevel = this.logLevelFromString(levelString) || 0;\n};\n\n/**\n * Ouput the styled ready message including a QR code that leads to the base url.\n *\n * @param  {String} url - The url to encode and log.\n * @param  {String} authUrl - The auth url to display.\n */\nmodule.exports.logReadyMessage = function logReadyMessage(url, authUrl) {\n\tqrcode.generate(url, { small: true }, function (qrCode) {\n\t\tconst message =\n\t\t\t`\n${`.  . .-. .-. .-. .-. .-. . .   .-. .-. . . .-. .-. .-. .   \n|\\\\/|  |  \\`-. \\`-.  |  | | |\\\\|   |   | | |\\\\|  |  |(  | | |   \n'  ' '-' '-' '-' '-' '-' ' '   '-' '-' ' '  '  ' ' '-' '-' `}\n\nMission Control available at ${chalk.cyan(url)}\n\n${qrCode}\n`;\n\n\t\tmodule.exports._log(message); // eslint-disable-line no-console\n\t});\n};\n\nmodule.exports.logMiddleware = function logMiddleware(req, res, next) {\n\tlet startTime = process.hrtime();\n\n\tonFinished(res, () => {\n\t\tconst colorFn = res.statusCode >= 500 ? chalk.red // red\n\t\t\t: res.statusCode >= 400 ? chalk.yellow // yellow\n\t\t\t\t: res.statusCode >= 300 ? chalk.cyan // cyan\n\t\t\t\t\t: res.statusCode >= 200 ? chalk.green // green\n\t\t\t\t\t\t: chalk.reset;\n\n\t\tconst now = process.hrtime();\n\t\tconst ms = (now[0] - startTime[0]) * 1e3 +\n\t\t\t(now[1] - startTime[1]) * 1e-6;\n\n\t\thttp(req.method, req.url, colorFn(res.statusCode), `${ms.toFixed(3)}ms`);\n\t});\n\n\tnext();\n};\n\nmodule.exports.logConfig = function logConfig(config) {\n\tconst spotifyCredentialsPresent = config.spotify.clientId && config.spotify.secret;\n\t\n\tmodule.exports._log(\n\t\tchalk`=== {bold Mission Control Config} ===\nVersion:\t\t${config.version}\nLog Level:\t\t${config.logLevel}\nDB Path:\t\t{cyan ${config.databasePath}}\nDashboard Path: \t{cyan ${config.dashboard.path}}\nHomebridge Pin:\t\t${config.homebridge.pin || chalk.reset.gray('None')}\nSpotify Creds:\t\t${spotifyCredentialsPresent ? 'Provided' : chalk.reset.gray('Not provided')}\nHTTP URL:\t\t{cyan ${config.http.url}}\nHTTP Port:\t\t${config.http.port}\nHTTP Domains:\t\t${config.http.allowedDomains.map(domain => chalk`{cyan ${domain}}`).join(', ')}\n\\n`\n\t);\n};\n\nmodule.exports.progress = async function progress(callback) {\n\tprogressBar = new cliProgress.SingleBar({\n\t    format: `|${chalk.cyan('{bar}')}| {percentage}% {label}`,\n\t    barCompleteChar: '\\u2588',\n\t    barIncompleteChar: '\\u2591',\n\t    hideCursor: true\n\t}, cliProgress.Presets.rect);\n\n\tprogressBar.start(1, 0, {\n\t    label: ''\n\t});\n\n\tfunction cleanup() {\n\t\tif (progressBar) {\n\t\t\tprogressBar.stop();\n\t\t\tprogressBar = null;\n\t\t}\n\n\t\tlogBuffer.forEach(msgs => console_log(...msgs));\n\t\tlogBuffer = [];\n\t}\n\n\ttry {\n\t\tawait callback((label, percentage) => progressBar.update(percentage, { label }));\n\t\tcleanup();\n\t} catch (e) {\n\t\tcleanup();\n\t\tmodule.exports.error(e);\n\t}\n};\n\nprocess.on('uncaughtException', function (err) {\n\terror(chalk.red.bold('Uncaught Exception'), err);\n});",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/helpers/logger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "chalk",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~chalk",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": "Logging Helpers",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": ""
      },
      {
        "tagName": "@helpers/log\n",
        "tagValue": ""
      },
      {
        "tagName": "@requires",
        "tagValue": "chalk, qrcode-terminal"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "qrcode",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~qrcode",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "onFinished",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~onFinished",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "cliProgress",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~cliProgress",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "logBuffer",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~logBuffer",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "progressBar",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~progressBar",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "console_log",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~console_log",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "_log",
    "memberof": "app/helpers/logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/logger.js~_log",
    "access": "private",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "msgs",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "newLine",
    "memberof": "app/helpers/logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/logger.js~newLine",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "LogLevel",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~LogLevel",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "{\"debug\": *, \"http\": number, \"info\": number, \"warn\": number, \"error\": number, \"fatal\": number, \"silent\": number}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "logLevelFromString",
    "memberof": "app/helpers/logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/logger.js~logLevelFromString",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": "Return a LogLevel from string.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "LogLevel | null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "LogLevel | null"
    },
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "logLevelToString",
    "memberof": "app/helpers/logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/logger.js~logLevelToString",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": "Convert a LogLevel to string.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "string | null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "LogLevel"
        ],
        "spread": false,
        "optional": false,
        "name": "logLevel",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "string | null"
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "createLogFunction",
    "memberof": "app/helpers/logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/logger.js~createLogFunction",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": "Create a log function with a LogLevel label attached.",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "Function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "LogLevel"
        ],
        "spread": false,
        "optional": false,
        "name": "levelOfLogger",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Function"
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "logLevel",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~logLevel",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": "The global log level.",
    "lineNumber": 101,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "debug",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~debug",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "http",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~http",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "info",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~info",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "warn",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~warn",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "error",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~error",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "fatal",
    "memberof": "app/helpers/logger.js",
    "static": true,
    "longname": "app/helpers/logger.js~fatal",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "createLogger",
    "memberof": "app/helpers/logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/logger.js~createLogger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": "Create a logger with text label attached.",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"newLine\": *, \"debug\": *, \"http\": *, \"info\": *, \"warn\": *, \"error\": *, \"fatal\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "setLogLevel",
    "memberof": "app/helpers/logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/logger.js~setLogLevel",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": "Set the global log level.",
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "LogLevel"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "logReadyMessage",
    "memberof": "app/helpers/logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/logger.js~logReadyMessage",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": "Ouput the styled ready message including a QR code that leads to the base url.",
    "lineNumber": 175,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url to encode and log."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "authUrl",
        "description": "The auth url to display."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "logMiddleware",
    "memberof": "app/helpers/logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/logger.js~logMiddleware",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "params": [
      {
        "name": "req",
        "types": [
          "*"
        ]
      },
      {
        "name": "res",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "logConfig",
    "memberof": "app/helpers/logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/helpers/logger.js~logConfig",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "progress",
    "memberof": "app/helpers/logger.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/helpers/logger.js~progress",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/helpers/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 230,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "app/http/UserError.js",
    "content": "module.exports = class UserError extends Error {\n\tconstructor(message, status = 400) {\n\t\tsuper(message);\n\n\t\tthis.status = status;\n\t\tthis.isUserError = true;\n\t}\n}",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/http/UserError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "class",
    "name": "exports",
    "memberof": "app/http/UserError.js",
    "static": true,
    "longname": "app/http/UserError.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/UserError.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "Error"
    ],
    "ignore": true
  },
  {
    "__docId__": 127,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/http/UserError.js~exports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/http/UserError.js~exports#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "status",
    "memberof": "app/http/UserError.js~exports",
    "static": false,
    "longname": "app/http/UserError.js~exports#status",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "isUserError",
    "memberof": "app/http/UserError.js~exports",
    "static": false,
    "longname": "app/http/UserError.js~exports#isUserError",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "file",
    "name": "app/http/index.js",
    "content": "/**\n * ### The HTTP Server\n * All HTTP communications run through this server, although third-party dependencies\n * might still create their own HTTP servers.\n *\n * The socket server might be better for your implementation.\n *\n * @see {@link module:@socket}\n * @module @http\n * @requires express\n * @requires express-session\n * @requires passport\n * @requires querystring\n */\n\nconst config = require('@config');\nconst logging = require('@helpers/logger');\nconst logger = logging.createLogger('HTTP');\n\nconst express = require('express');\nconst { createServer } = require('http');\n\nconst session = require('express-session');\nconst FileStore = require('session-file-store')(session);\nconst proxy = require('http-proxy-middleware');\nconst flash = require('connect-flash');\nconst bodyParser = require('body-parser');\nconst passport = require('passport');\nconst fs = require('fs');\n\n// const minify = require('html-minifier').minify;\n\nconst authRoutes = require('./routes/auth');\nconst stateRoutes = require('./routes/state');\nconst dashboardRoutes = require('./routes/dashboard');\n\nconst addPluginDashboardComponentsMiddleware = require('./middleware/plugin-dashboard-components');\n\n/**\n * Initialize the main HTTP server for the mission control sysyem.\n *\n * All HTTP communications run through this server, although third-party dependencies\n * might still create their own HTTP servers.\n * @return {module:express~Server} The express HTTP server.\n */\nmodule.exports = function http(state, database, auth, sessionSecret) {\n\tconst app = express();\n\tconst server = createServer(app);\n\n\tlet components = {};\n\tlet pages = {};\n\n\tapp.use(logging.logMiddleware);\n\tapp.use(bodyParser.urlencoded({ extended: true }));\n\tapp.use(bodyParser.json());\n\tapp.use(\n\t\tsession({\n\t\t\tstore: new FileStore({\n\t\t\t\tpath: config.basePath + '/session',\n\t\t\t\tsecret: sessionSecret,\n\t\t\t\tlogFn: logging.debug,\n\t\t\t}),\n\t\t\tsecret: sessionSecret,\n\t\t\tresave: false,\n\t\t\tsaveUninitialized: false,\n\t\t\tname: 'mc.sid',\n\t\t\tcookie: {\n\t\t\t\thttpOnly: true,\n\t\t\t\tmaxAge: 1000 * 60 * 60 * 24 * 365, // sessions are active for a year\n\t\t\t},\n\t\t})\n\t);\n\tapp.use(flash());\n\n\tapp.use(passport.initialize());\n\tapp.use(passport.session());\n\n\t// Parse host domain from headers\n\tapp.use((req, res, next) => {\n\t\treq.hostUrl = config.http.allowedDomains.includes(req.headers['host'])\n\t\t\t? req.protocol + '://' + req.headers['host']\n\t\t\t: config.http.url;\n\n\t\tnext();\n\t});\n\n\tapp.use(authRoutes(new express.Router(), auth));\n\tapp.use(stateRoutes(new express.Router(), auth));\n\n\tconst dashboardRouter = new express.Router();\n\n\t// Dashboard routes need component & page data attached\n\tdashboardRouter.use(\n\t\taddPluginDashboardComponentsMiddleware(\n\t\t\t() => ({ components, pages }),\n\t\t\tstate.getState\n\t\t)\n\t);\n\n\tapp.use(dashboardRoutes(dashboardRouter, auth));\n\n\tapp.use(function (err, req, res, next) {\n\t\tlogging.error('Unknown Error', err);\n\n\t\tif (err.isUserError) {\n\t\t\tres.status(err.status).json({\n\t\t\t\terror: {\n\t\t\t\t\tmessage: err.message,\n\t\t\t\t\tstatus: err.status\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tres.status(500).json({\n\t\t\t\terror: {\n\t\t\t\t\tmessage: 'An unknown error occurred',\n\t\t\t\t\tstatus: 500\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\tconst context = {\n\t\tserver,\n\t\tcomposeAPIContext(pluginName) {\n\t\t\tconst baseUrl = `/plugins/${pluginName}`;\n\n\t\t\tconst localContext = {\n\t\t\t\tbaseUrl,\n\t\t\t\tcomponents: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\treturn components;\n\t\t\t\t\t},\n\t\t\t\t\tset(name, component) {\n\t\t\t\t\t\tcomponents[name] = component;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpages: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\treturn pages;\n\t\t\t\t\t},\n\t\t\t\t\tset(name, page) {\n\t\t\t\t\t\tpages[name] = page;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst rawRouter = composeAPIContextFromRouter({\n\t\t\t\t...localContext,\n\t\t\t\tbaseUrl: '',\n\t\t\t});\n\t\t\tconst unsafeRouter = composeAPIContextFromRouter(localContext);\n\n\t\t\tconst router = composeAPIContextFromRouter(localContext);\n\t\t\trouter.noAuth = unsafeRouter; // Router for routes that don't use auth\n\t\t\trouter.raw = rawRouter; // Router for routes that start at URL root. Useful for pretty URLs\n\n\t\t\tapp.use(rawRouter);\n\t\t\tapp.use(baseUrl, unsafeRouter);\n\t\t\tapp.use(baseUrl, auth.middleware.requireAuthentication, router);\n\n\t\t\treturn router;\n\t\t},\n\t};\n\n\treturn context;\n};\n\nfunction composeAPIContextFromRouter({ baseUrl, components, pages }) {\n\tconst router = express.Router();\n\trouter.baseUrl = baseUrl;\n\n\t/**\n\t * Proxy an HTTP route to another target URL.\n\t * This is useful if you want to proxy something through mission-control auth.\n\t */\n\trouter.proxy = function _proxy(route, target, options = {}) {\n\t\trouter.use(\n\t\t\troute,\n\t\t\tproxy('/', {\n\t\t\t\ttarget,\n\t\t\t\tlogLevel: config.debug ? 'debug' : 'warn',\n\t\t\t\tws: true,\n\t\t\t\tpathRewrite: {\n\t\t\t\t\t[`^${route}`]: '/',\n\t\t\t\t\t[`^${route}/`]: '/',\n\t\t\t\t},\n\t\t\t\t...options,\n\t\t\t})\n\t\t);\n\t};\n\n\trouter.addComponent = (name, htmlContent, contentFn = null) => {\n\t\tcomponents.set(name, {\n\t\t\tname,\n\t\t\tcontentFn,\n\t\t\tcontent: htmlContent,\n\t\t});\n\t};\n\n\trouter.addComponentFile = (name, filePath) => {\n\t\tconst getFile = () => fs.readFileSync(filePath).toString();\n\n\t\trouter.addComponent(name, getFile(), getFile);\n\t};\n\n\trouter.addComponentScript = (name, scriptContent) => {\n\t\trouter.registerComponent(\n\t\t\t`\n\t\t\t<script>\n\t\t\t\t${scriptContent}\n\t\t\t</script>\n\t\t`,\n\t\t\tname\n\t\t);\n\t};\n\n\trouter.addPage = (url, title, componentName, options = {}) => {\n\t\tpages.set(url, {\n\t\t\turl,\n\t\t\ttitle,\n\t\t\tcomponentName,\n\t\t\tmenuExact: options.exact,\n\t\t\tmenu: options.menu,\n\t\t\ticon: options.icon,\n\t\t});\n\t};\n\n\treturn router;\n}\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/http/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 131,
    "kind": "variable",
    "name": "config",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~config",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": "### The HTTP Server\nAll HTTP communications run through this server, although third-party dependencies\nmight still create their own HTTP servers.\n\nThe socket server might be better for your implementation.",
    "see": [
      "{@link module:@socket}"
    ],
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": ""
      },
      {
        "tagName": "@http\n",
        "tagValue": ""
      },
      {
        "tagName": "@requires",
        "tagValue": "express"
      },
      {
        "tagName": "@requires",
        "tagValue": "express-session"
      },
      {
        "tagName": "@requires",
        "tagValue": "passport"
      },
      {
        "tagName": "@requires",
        "tagValue": "querystring"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 132,
    "kind": "variable",
    "name": "logging",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~logging",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "express",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~express",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "createServer",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~createServer",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "session",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~session",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "FileStore",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~FileStore",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "proxy",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~proxy",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "flash",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~flash",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "bodyParser",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~bodyParser",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "name": "passport",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~passport",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "variable",
    "name": "fs",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~fs",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "name": "authRoutes",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~authRoutes",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "stateRoutes",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~stateRoutes",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "dashboardRoutes",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~dashboardRoutes",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "variable",
    "name": "addPluginDashboardComponentsMiddleware",
    "memberof": "app/http/index.js",
    "static": true,
    "longname": "app/http/index.js~addPluginDashboardComponentsMiddleware",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "exports",
    "memberof": "app/http/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/http/index.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": "Initialize the main HTTP server for the mission control sysyem.\n\nAll HTTP communications run through this server, although third-party dependencies\nmight still create their own HTTP servers.",
    "lineNumber": 46,
    "return": {
      "nullable": null,
      "types": [
        "module:express~Server"
      ],
      "spread": false,
      "description": "The express HTTP server."
    },
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "database",
        "types": [
          "*"
        ]
      },
      {
        "name": "auth",
        "types": [
          "*"
        ]
      },
      {
        "name": "sessionSecret",
        "types": [
          "*"
        ]
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "function",
    "name": "composeAPIContextFromRouter",
    "memberof": "app/http/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/http/index.js~composeAPIContextFromRouter",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"baseUrl\": *, \"components\": *, \"pages\": *}"
        ],
        "defaultRaw": {
          "baseUrl": null,
          "components": null,
          "pages": null
        },
        "defaultValue": "{\"baseUrl\":null,\"components\":null,\"pages\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "app/http/middleware/plugin-dashboard-components.js",
    "content": "module.exports = function addPluginDashboardComponentsMiddleware(getData, getState) {\n\treturn (req, res, next) => {\n\t\tconst { components, pages } = getData();\n\n\t\t// Attach dashboard components\n\t\treq.componentsHtml = () => {\n\t\t\tlet html = Object.values(components)\n\t\t\t\t.map((component) => `<!-- ${component.name} COMPONENT HTML -->\n\t\t\t\t\t${component.contentFn ? component.contentFn() : component.content}\n\t\t\t\t`)\n\t\t\t\t.reduce((html, component) => html + component, '');\n\n\t\t\treturn html;\n\n\t\t\t// return minify(html, {\n\t\t\t// \tminifyJS: true,\n\t\t\t// \tminifyCSS: true\n\t\t\t// });\n\t\t};\n\n\t\treq.pagesJson = () => {\n\t\t\treturn JSON.stringify(Object.values(pages));\n\t\t};\n\n\t\treq.state = getState();\n\n\t\tnext();\n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/http/middleware/plugin-dashboard-components.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "function",
    "name": "exports",
    "memberof": "app/http/middleware/plugin-dashboard-components.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/http/middleware/plugin-dashboard-components.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/middleware/plugin-dashboard-components.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "getData",
        "types": [
          "*"
        ]
      },
      {
        "name": "getState",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "app/http/routes/auth.js",
    "content": "const logging = require('@helpers/logger');\nconst logger = logging.createLogger('Auth');\n\nconst passport = require('passport');\nconst jwt = require('jsonwebtoken');\nconst JWTStrategy = require('passport-jwt').Strategy;\nconst ExtractJwt = require('passport-jwt').ExtractJwt;\nconst queryString = require('querystring');\nconst proxy = require('http-proxy-middleware');\n\nconst User = require('@database/models/User');\nconst UserError = require('@http/UserError');\n\n/*\n\tHow the auth system works\n\t=========================\n\n\tWe have a SSO server that we redirect to, if we are not logged in.\n\tThat server, on a successful login, returns a JSON Web Token (JWT).\n\n\tIt will then redirect us back to the page we came from which is specified in\n\tthe querystring ('redirect_url') of the first request to the SSO server.\n\n\tIn this server, we will then get that jwt that was also passed as a querystring ('auth_token')\n\tand verify it with the same key the SSO server used to sign the token.\n\n\tIf this verification is successful, we add the JWT to the session object.\n\n\tWhen we now try to access a resource, that is protected by passport, the passport JWTStrategy \n\twill kick in. The JWTStrategy checks the session object for the JWT. If there is one present,\n\tit will get verified. When that is successful and the token has not expired, \n\tit lets the request pass.\n*/\n\nmodule.exports = function authRoutes(app, auth) {\n\tapp.get('/login', auth.controller.serveLoginPage);\n    app.post('/login', auth.controller.performAuthentication);\n\n\tapp.get('/logout', (req, res) => {\n\t\treq.logout();\n\t\t// req.session.destroy();\n\n\t\tres.redirect('/login');\n\t});\n\n\tapp.get('/users/:username', (req, res) => {\n\t\tconsole.log(req.params);\n\t\tconst username = String(req.params.username);\n\t\tconst user = User.validate({});\n\t\tconsole.log(user);\n\n\t\t// next(new Error('wat'));\n\t\t\n\t\t// try {\n\t\t// \tawait auth.controller.updateUser(user, username);\n\t\t// \tres.json({});\n\t\t// } catch (e) {\n\n\t\t// }\n\t\t// logger.info(`Updating User ${username}`, user);\n\n\t\t// if (!auth.permissions.canEditUser(req.user, username)) {\n\t\t// \treturn res.status(401).json({\n\t\t// \t\terror: {\n\t\t// \t\t\tstatus: 401,\n\t\t// \t\t\tmessage: 'Not allowed to edit user data'\n\t\t// \t\t}\n\t\t// \t});\n\t\t// }\n\n\t\t// if (username !== user.username) {\n\t\t// \t// Set username\n\t\t// \tawait database.api.users.updateUsername(username, user.username);\n\t\t// }\n\n\t\t// // TODO: Better permission-based password changes\n\t\t// // Right now we only check if the current user is the same that's\n\t\t// // trying to change the thing.\n\n\t\t// // If the password is changed, update (and hash) the password\n\t\t// if (user.password) {\n\t\t// \t// Check if user is allowed to change this users password\n\t\t// \t// User can only change password, if he is that user or an admin.\n\t\t// \tif (\n\t\t// \t\treq.user.role === 'guest' \n\t\t// \t\t|| (\n\t\t// \t\t\tusername !== req.user.username \n\t\t// \t\t\t&& req.user.role !== 'admin'\n\t\t// \t\t)\n\t\t// \t) {\n\t\t// \t\treturn res.status(401).json({\n\t\t// \t\t\terror: {\n\t\t// \t\t\t\tstatus: 401,\n\t\t// \t\t\t\tmessage: 'Not allowed to change username'\n\t\t// \t\t\t}\n\t\t// \t\t});\n\t\t// \t}\n\n\t\t// \t// Update password\n\t\t// \tdatabase.api.users.updatePassword(username, user.password);\n\t\t// }\n\n\t\t// // TODO: DONT DO THIS, FIGURE OUT HOW TO DO THIS CLEANLY!\n\t\t// // Events? Private user state?\n\t\t// database.api.users.update(username, user);\n\n\t\t// res.json({\n\t\t// \terror: null\n\t\t// });\n\t});\n\n\n\n\treturn app;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/http/routes/auth.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "logging",
    "memberof": "app/http/routes/auth.js",
    "static": true,
    "longname": "app/http/routes/auth.js~logging",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/http/routes/auth.js",
    "static": true,
    "longname": "app/http/routes/auth.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "passport",
    "memberof": "app/http/routes/auth.js",
    "static": true,
    "longname": "app/http/routes/auth.js~passport",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "jwt",
    "memberof": "app/http/routes/auth.js",
    "static": true,
    "longname": "app/http/routes/auth.js~jwt",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "JWTStrategy",
    "memberof": "app/http/routes/auth.js",
    "static": true,
    "longname": "app/http/routes/auth.js~JWTStrategy",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "ExtractJwt",
    "memberof": "app/http/routes/auth.js",
    "static": true,
    "longname": "app/http/routes/auth.js~ExtractJwt",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "queryString",
    "memberof": "app/http/routes/auth.js",
    "static": true,
    "longname": "app/http/routes/auth.js~queryString",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "proxy",
    "memberof": "app/http/routes/auth.js",
    "static": true,
    "longname": "app/http/routes/auth.js~proxy",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "name": "User",
    "memberof": "app/http/routes/auth.js",
    "static": true,
    "longname": "app/http/routes/auth.js~User",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "variable",
    "name": "UserError",
    "memberof": "app/http/routes/auth.js",
    "static": true,
    "longname": "app/http/routes/auth.js~UserError",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "exports",
    "memberof": "app/http/routes/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/http/routes/auth.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "app",
        "types": [
          "*"
        ]
      },
      {
        "name": "auth",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "app/http/routes/dashboard.js",
    "content": "const config = require('@config');\nconst fs = require('fs');\nconst path = require('path');\nconst express = require('express');\nconst addTrailingSlashMiddleware = require('@helpers/add-trailing-slash-middleware');\n\nconst dashboardHtmlPath = path.resolve(__dirname, '../../views/dashboard.html');\nconst dashboardHtml = fs.readFileSync(dashboardHtmlPath)\n\t.toString()\n\t.replace(/{{SERVER_REPLACE_URL}}/gm, config.http.url);\n\n// HTML for the mobile dashboard (uses JS optimized for old iOS Safari)\nconst dashboardHtmlMobile = dashboardHtml\n\t.replace(/index\\.js/gm, 'mobile.js')\n\t.replace('<!--DELETE-MOBILE', '')\n\t.replace('DELETE-MOBILE-->', '');\n\nfunction renderDashboard(mobile = false, generateAPIToken) {\n\treturn (req, res) => {\n\t\tconst html = (mobile ? dashboardHtmlMobile : dashboardHtml)\n\t\t\t.replace(/{{SERVER_REPLACE_API_KEY}}/gm, generateAPIToken(req.user))\n\t\t\t.replace(/{{SERVER_REPLACE_DASHBOARD_DATA}}/, req.componentsHtml())\n\t\t\t.replace(/{{SERVER_REPLACE_USER_JSON}}/, JSON.stringify({ ...req.user, password: undefined }))\n\t\t\t.replace(/{{SERVER_REPLACE_PAGES_JSON}}/, req.pagesJson())\n\t\t\t.replace(/{{SERVER_REPLACE_STATE_JSON}}/, JSON.stringify(req.state));\n\n\t\tres.set('Content-Type', 'text/html').send(html);\n\t};\n}\n\nmodule.exports = function dashboardRoutes(app, auth) {\n\t// Dashboard HTML routes\n\tapp.get('/', addTrailingSlashMiddleware, auth.middleware.requireAuthentication, renderDashboard(false, auth.tokens.generate));\n\tapp.get('/mobile', addTrailingSlashMiddleware, auth.middleware.requireAuthentication, renderDashboard(true, auth.tokens.generate));\n\n\t// Redirect old dashboard routes\n\tapp.get('/dashboard', auth.middleware.requireAuthentication, (req, res) => res.redirect('/'));\n\tapp.get('/dashboard/mobile', auth.middleware.requireAuthentication, (req, res) => res.redirect('/mobile'));\n\n\t// JS & CSS Assets\n\tapp.use('/assets', express.static(config.dashboard.path));\n\n\tapp.use('/resources', express.static(path.resolve(__dirname, '../../../resources')));\n\n\tapp.get('/apple-touch-icon.png', (req, res) => {\n\t\tres.sendFile(path.resolve(__dirname, '../../../resources/mission-control-icon.png'));\n\t});\n\n\tapp.get('/favicon.png', (req, res) => {\n\t\tres.sendFile(path.resolve(__dirname, '../../../resources/favicon.png'));\n\t});\n\n\treturn app;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/http/routes/dashboard.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "name": "config",
    "memberof": "app/http/routes/dashboard.js",
    "static": true,
    "longname": "app/http/routes/dashboard.js~config",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/dashboard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "variable",
    "name": "fs",
    "memberof": "app/http/routes/dashboard.js",
    "static": true,
    "longname": "app/http/routes/dashboard.js~fs",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/dashboard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 166,
    "kind": "variable",
    "name": "path",
    "memberof": "app/http/routes/dashboard.js",
    "static": true,
    "longname": "app/http/routes/dashboard.js~path",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/dashboard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "express",
    "memberof": "app/http/routes/dashboard.js",
    "static": true,
    "longname": "app/http/routes/dashboard.js~express",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/dashboard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "addTrailingSlashMiddleware",
    "memberof": "app/http/routes/dashboard.js",
    "static": true,
    "longname": "app/http/routes/dashboard.js~addTrailingSlashMiddleware",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/dashboard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "variable",
    "name": "dashboardHtmlPath",
    "memberof": "app/http/routes/dashboard.js",
    "static": true,
    "longname": "app/http/routes/dashboard.js~dashboardHtmlPath",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/dashboard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "variable",
    "name": "dashboardHtml",
    "memberof": "app/http/routes/dashboard.js",
    "static": true,
    "longname": "app/http/routes/dashboard.js~dashboardHtml",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/dashboard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "variable",
    "name": "dashboardHtmlMobile",
    "memberof": "app/http/routes/dashboard.js",
    "static": true,
    "longname": "app/http/routes/dashboard.js~dashboardHtmlMobile",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/dashboard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "renderDashboard",
    "memberof": "app/http/routes/dashboard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/http/routes/dashboard.js~renderDashboard",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/dashboard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "mobile",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      },
      {
        "name": "generateAPIToken",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "exports",
    "memberof": "app/http/routes/dashboard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/http/routes/dashboard.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/dashboard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "app",
        "types": [
          "*"
        ]
      },
      {
        "name": "auth",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 174,
    "kind": "file",
    "name": "app/http/routes/state.js",
    "content": "const { getState, invokeAction } = require('@state');\n\nmodule.exports = function state(app, auth) {\n\t/*\n\t * This route lets you get the state from the state machine via URL parameters.\n\t * Basically we take each parameter and go through the state object step by step.\n\t * So getting the state like: state.lamps.livingRoom.isOn would be\n\t * /state/lamps/livingRoom/isOn\n\t * Also works using array indicies e.g. /array/1.\n\t */\n\t// app.get(\n\t// \t'/state/:param1?/:param2?/:param3?/:param4?/:param5?/:param6?/:param7?/:param8?',\n\t// \tauth.middleware.requireAuthentication,\n\t// \t(req, res) => {\n\t// \t\t// Get the parameters and filter out the ones that arent set i.e. null\n\t// \t\tconst params = Object.values(req.params).filter(value => !!value);\n\t// \t\tconst currentState = getState();\n\n\t// \t\t// Go through the list of parameters and find the object in the state\n\t// \t\tconst value = params.reduce((currentObject, param) => {\n\t// \t\t\tif (\n\t// \t\t\t\tcurrentObject === null ||\n\t// \t\t\t\ttypeof currentObject !== 'object' ||\n\t// \t\t\t\t!(param in currentObject)\n\t// \t\t\t)\n\t// \t\t\t\treturn null;\n\n\t// \t\t\treturn currentObject[param];\n\t// \t\t}, currentState);\n\n\t// \t\tres.json(value);\n\t// \t}\n\t// );\n\n\t/*\n\t * This route enables calling an action by http request.\n\t * You can pass data by using the URL query.\n\t * So data like { isOn: true } would be /?isOn=true\n\t * TODO: HTTP authentication\n\t */\n\t// app.get('/action/:action', auth.middleware.requireAuthentication, (req, res) => {\n\t// \tres.json(invokeAction(req.params.action, req.query));\n\t// });\n\n\treturn app;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/http/routes/state.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 175,
    "kind": "variable",
    "name": "getState",
    "memberof": "app/http/routes/state.js",
    "static": true,
    "longname": "app/http/routes/state.js~getState",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "exports",
    "memberof": "app/http/routes/state.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/http/routes/state.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/http/routes/state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "app",
        "types": [
          "*"
        ]
      },
      {
        "name": "auth",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 177,
    "kind": "file",
    "name": "app/index.js",
    "content": "#! /usr/bin/env node\n/*\n * Mission Control\n *\n * This file starts the server.\n * Everything is setup in here.\n * Modules that start with @ can be required by any other module as they're\n * self-contained without side-effects.\n */\n\nrequire('module-alias/register');\nconst config = require('@config');\nconst argv = require('@helpers/argv');\nconst logging = require('@helpers/logger');\n\nmodule.exports = async function start() {\n\tlogging.logConfig(config);\n\tlogging.progress(startMissionControl);\n};\n\nasync function startMissionControl(updateProgressBar) {\n\tconst logger = logging.createLogger('Main', 'cyan');\n\tconst eventLogger = logging.createLogger('Event', 'green');\n\n\tlogger.info(`Starting Mission Control...`);\n\tupdateProgressBar('Boot Database', 0.01);\n\n\tconst database = require('@database'); // eslint-disable-line no-unused-vars\n\n\tlet sessionSecret = database.get('session-secret', null);\n\tif (!sessionSecret) {\n\t\tsessionSecret = uuid();\n\t\tdatabase.set('session-secret', sessionSecret);\n\t}\n\n\t// Start the state machine\n\tupdateProgressBar('Boot State Machine', 0.1);\n\tconst state = require('@state');\n\n\tupdateProgressBar('Boot Auth', 0.2);\n\tconst initAuth = require('./auth');\n\tconst auth = initAuth(config, database, sessionSecret);\n\n\tupdateProgressBar('Load HTTP Server', 0.3);\n\tconst initHttp = require('./http');\n\tconst socket = require('./socket');\n\n\tupdateProgressBar('Boot HTTP Server', 0.4);\n\t// Initialize the main mission control http server\n\tconst http = initHttp(state, database, auth, sessionSecret);\n\n\tupdateProgressBar('Boot Socket Server', 0.5);\n\t// Initialize the socket server\n\tconst io = socket(state, http, auth); // eslint-disable-line no-unused-vars\n\n\tupdateProgressBar('Init Plugins', 0.75);\n\tconst plugins = require('./plugins');\n\tawait plugins.initPlugins({\n\t\thttp,\n\t\tstate,\n\t\tdatabase,\n\t\tconfig\n\t}, updateProgressBar);\n\n\tupdateProgressBar('HTTP Listen', 0.95);\n\thttp.server.listen(config.http.port, () => {\n\t\tlogging.http(`Server listening on port`, config.http.port);\n\t\tlogging.logReadyMessage(config.http.url, config.auth.url);\n\t});\n\n\tif (config.debug) {\n\t\tstate.subscribe('*', (event, data) =>\n\t\t\teventLogger.debug(event, data.actionData || data)\n\t\t);\n\t}\n};\n\n\n// setTimeout(\n// \t() =>\n// \t\tstate.invokeAction('VIDEO-QUEUE:PUSH', {\n// \t\t\tvideo: {\n// \t\t\t\turl: 'https://www.youtube.com/watch?v=jNQXAC9IVRw',\n// \t\t\t\tformat: 'm4a'\n// \t\t\t}\n// \t\t}),\n// \t2000\n// );\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 178,
    "kind": "variable",
    "name": "config",
    "memberof": "app/index.js",
    "static": true,
    "longname": "app/index.js~config",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 179,
    "kind": "variable",
    "name": "argv",
    "memberof": "app/index.js",
    "static": true,
    "longname": "app/index.js~argv",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 180,
    "kind": "variable",
    "name": "logging",
    "memberof": "app/index.js",
    "static": true,
    "longname": "app/index.js~logging",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "exports",
    "memberof": "app/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/index.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 182,
    "kind": "function",
    "name": "startMissionControl",
    "memberof": "app/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/index.js~startMissionControl",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "updateProgressBar",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "file",
    "name": "app/plugins/create-plugin-context.js",
    "content": "const loggers = require('@helpers/logger');\nconst pkg = require('../../package.json');\n\nmodule.exports = function createPluginContext(name, { http, state, database, config }) {\n\treturn {\n\t\tlogger: loggers.createLogger(`${name}`),\n\t\thttp: http.composeAPIContext(name),\n\t\tstate: {\n\t\t\tget: state.getState,\n\t\t\tsubscribe: state.subscribe,\n\t\t\tinvoke: state.invokeAction,\n\t\t\taddAction(name, reducer, validate = (data) => data) {\n\t\t\t\tstate.registerReducer(name, reducer, validate);\n\t\t\t}\n\t\t},\n\t\tdatabase,\n\t\tconfig\n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/create-plugin-context.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "name": "loggers",
    "memberof": "app/plugins/create-plugin-context.js",
    "static": true,
    "longname": "app/plugins/create-plugin-context.js~loggers",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/create-plugin-context.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "variable",
    "name": "pkg",
    "memberof": "app/plugins/create-plugin-context.js",
    "static": true,
    "longname": "app/plugins/create-plugin-context.js~pkg",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/create-plugin-context.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/create-plugin-context.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/create-plugin-context.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/create-plugin-context.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"http\": *, \"state\": *, \"database\": *, \"config\": *}"
        ],
        "defaultRaw": {
          "http": null,
          "state": null,
          "database": null,
          "config": null
        },
        "defaultValue": "{\"http\":null,\"state\":null,\"database\":null,\"config\":null}"
      }
    ],
    "return": {
      "types": [
        "{\"logger\": *, \"http\": *, \"state\": *, \"database\": *, \"config\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "file",
    "name": "app/plugins/index.js",
    "content": "const path = require('path');\nconst fs = require('fs/promises');\n\nconst config = require('@config');\nconst logger = require('@helpers/logger').createLogger('Plugins');\n\nconst createPluginContext = require('./create-plugin-context');\n\nconst filterOutDisabledPlugins = filename => !filename.startsWith('_');\n\nasync function getPluginPaths() {\n\tconst defaultPluginsDir = path.resolve(__dirname, 'internal');\n\tconst pluginsDir = path.resolve(config.basePath, 'plugins');\n\n\tlet paths = [];\n\n\ttry {\n\t\tconst files = await fs.readdir(defaultPluginsDir);\n\n\t\t// Make paths absolute\n\t\tpaths = paths.concat(\n\t\t\tfiles\n\t\t\t\t.filter(filterOutDisabledPlugins)\n\t\t\t\t.map(file => path.resolve(defaultPluginsDir, file))\n\t\t);\n\t} catch(e) {\n\t\tlogger.error('Could not read default plugin path', defaultPluginsDir, e);\n\t}\n\n\ttry {\n\t\tconst files = await fs.readdir(pluginsDir);\n\n\t\t// Make paths absolute\n\t\tpaths = paths.concat(\n\t\t\tfiles\n\t\t\t\t.filter(filterOutDisabledPlugins)\n\t\t\t\t.map(file => path.resolve(pluginsDir, file))\n\t\t);\n\t} catch(e) {\n\t\tlogger.error('Could not read plugin path', pluginsDir, e);\n\t}\n\t\n\t// TODO: Add paths from plugins globally installed via NPM\n\n\treturn paths;\n}\n\n// PLUGIN\n// name\n//\n\nlet plugins = {};\n\nmodule.exports = {\n\tasync initPlugins(globalContext, updateProgress) {\n\t\t/**\n\t\t * @ACTION\n\t\t * Register a plugin\n\t\t * @constant PLUGINS:ADD\n\t\t * @property {{ name, version, description }} plugin The plugin.\n\t\t * @example demo-action-call\n\t\t */\n\t\tglobalContext.state.registerReducer(\n\t\t\t'PLUGINS:ADD', \n\t\t\t(state, plugin) => ({\n\t\t\t\t...state,\n\t\t\t\tplugins: {\n\t\t\t\t\t...state.plugins,\n\t\t\t\t\t[plugin.name]: plugin\n\t\t\t\t}\n\t\t\t}), \n\t\t\tdata => data\n\t\t);\n\n\t\tlogger.debug('Initializing plugins');\n\n\t\tconst pluginPaths = await getPluginPaths();\n\t\tlogger.debug('Plugin paths:', pluginPaths);\n\n\t\tlet finished = 0;\n\t\tfunction progressUpdate() {\n\t\t\tfinished++;\n\t\t\tupdateProgress('Finished plugin', 0.75 + ((finished / pluginPaths.length) * 0.15));\n\t\t}\n\n\t\t//for (const pluginPath of pluginPaths) {\n\t\tconst initPromises = pluginPaths\n\t\t\t.map(async pluginPath => {\n\t\t\t\treturn (async () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst pluginFactory = require(pluginPath);\n\n\t\t\t\t\t\tconst { name } = path.parse(pluginPath);\n\n\t\t\t\t\t\tlogger.debug('Init plugin', name);\n\n\t\t\t\t\t\t// The context is the object, the plugin can use to access system internals\n\t\t\t\t\t\tconst context = createPluginContext(name, globalContext);\n\n\t\t\t\t\t\t// Register in internal plugins\n\t\t\t\t\t\tplugins[name] = {\n\t\t\t\t\t\t\tversion: '0.0.0',\n\t\t\t\t\t\t\t...await pluginFactory(context), // Init the plugin\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Call Action to reflect new plugin state\n\t\t\t\t\t\tglobalContext.state.invokeAction('PLUGINS:ADD', {\n\t\t\t\t\t\t\tname: plugins[name].name, \n\t\t\t\t\t\t\tversion: plugins[name].version, \n\t\t\t\t\t\t\tdescription: plugins[name].description\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tprogressUpdate();\n\t\t\t\t\t\tlogger.debug(`Successfully loaded ${name} version ${plugins[name].version || 'unknown'}`);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlogger.error('Could not init plugin at path', pluginPath, e);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t});\n\n\t\ttry {\n\t\t\tawait Promise.allSettled(initPromises);\n\n\t\t\tlogger.debug('Finished initializing plugins');\n\t\t} catch (e) {\n\t\t\tlogger.error('Unknown error during plugin initialization', e);\n\t\t}\n\t},\n\n\tplugin(name) {\n\t\treturn plugins[name];\n\t}\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 188,
    "kind": "variable",
    "name": "path",
    "memberof": "app/plugins/index.js",
    "static": true,
    "longname": "app/plugins/index.js~path",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 189,
    "kind": "variable",
    "name": "fs",
    "memberof": "app/plugins/index.js",
    "static": true,
    "longname": "app/plugins/index.js~fs",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "variable",
    "name": "config",
    "memberof": "app/plugins/index.js",
    "static": true,
    "longname": "app/plugins/index.js~config",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 191,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/plugins/index.js",
    "static": true,
    "longname": "app/plugins/index.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 192,
    "kind": "variable",
    "name": "createPluginContext",
    "memberof": "app/plugins/index.js",
    "static": true,
    "longname": "app/plugins/index.js~createPluginContext",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "filterOutDisabledPlugins",
    "memberof": "app/plugins/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/index.js~filterOutDisabledPlugins",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "function",
    "name": "getPluginPaths",
    "memberof": "app/plugins/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/plugins/index.js~getPluginPaths",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 195,
    "kind": "variable",
    "name": "plugins",
    "memberof": "app/plugins/index.js",
    "static": true,
    "longname": "app/plugins/index.js~plugins",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "app/plugins/internal/bahn/api.js",
    "content": "const createHafas = require('db-hafas');\nconst hafas = createHafas('mission-control');\n\nconst stations = {\n\t'Lüneburg': '626772',\n\t'Lübeck': '8000237',\n\t'Munstermannskamp': '599913',\n\t'Universitätsallee': '597762'\n};\n\nmodule.exports = {\n\troutesToHL\n};\n\n// Return routes to Lübeck (includes buses)\nasync function routesToHL() {\n\tconst { journeys } = await hafas.journeys(stations['Lüneburg'], stations['Lübeck'], { results: 20 });\n\tconst routes = [];\n\tfor (const journey of journeys) {\n\t\tconst skipJourney = journey.legs\n\t\t\t.reduce((skip, leg) =>\n\t\t\t\tskip || leg.line.product !== 'regional',\n\t\t\t\tfalse\n\t\t\t);\n\n\t\tif (skipJourney)\n\t\t\tcontinue;\n\n\t\tconst route = await parseJourney(journey);\n\t\tconst buses = await busForJourney(journey);\n\n\t\troutes.push({\n\t\t\t...route,\n\t\t\tbuses\n\t\t});\n\t}\n\n\treturn routes;\n}\n\n// Return routes to Lüneburg (no buses needed)\nasync function routesToLG() {\n\tconst { journeys } = await hafas.journeys(stations['Lübeck'], stations['Lüneburg'], { results: 20 });\n\n\tconst routes = [];\n\tfor (const journey of journeys) {\n\t\tif (journey.legs.length > 1)\n\t\t\tcontinue;\n\n\t\tconst route = await parseJourney(journey);\n\n\t\troutes.push(route);\n\t}\n\n\treturn routes;\n}\n\nfunction routesToText(routes) {\n\tif (routes.length === 0) {\n\t\treturn 'No routes found.';\n\t}\n\n\tlet text = '';\n\n\tfor (const route of routes) {\n\t\tconst depDelay = route.departureDelay\n\t\t\t? ` (+${route.departureDelay})`\n\t\t\t: '';\n\n\t\tconst arrDelay = route.arrivalDelay\n\t\t\t? ` (+${route.arrivalDelay})`\n\t\t\t: '';\n\n\t\tconst busText = route.buses\n\t\t\t? ' | ' + busesToText(route.buses)\n\t\t\t: '';\n\t\ttext += `Ab: ${dateToTime(route.departure)}${depDelay}, An: ${dateToTime(route.arrival)}${arrDelay}${busText}\\n`;\n\t}\n\n\treturn text;\n}\n\nfunction busesToText(buses) {\n\tlet text = '';\n\n\tfor (const bus of buses) {\n\t\t// const depDelay = bus.departureDelay\n\t\t// \t? ` (+${bus.departureDelay})`\n\t\t// \t: '';\n\n\t\t// const arrDelay = bus.arrivalDelay\n\t\t// \t? ` (+${bus.arrivalDelay})`\n\t\t// \t: '';\n\n\t\ttext += `${bus.name} (${dateToTime(bus.departure)}), `;\n\t}\n\n\treturn text;\n}\n\n// Parse a train journey's legs into our needed info\nfunction parseJourney(journey) {\n\tconst leg = journey.legs[0];\n\tconst lastLeg = journey.legs[journey.legs.length - 1];\n\n\tconst lines = journey.legs.map(leg => leg.line.name).join(', ');\n\n\treturn {\n\t\tlines,\n\t\tdeparture: new Date(leg.departure),\n\t\tarrival: new Date(lastLeg.arrival),\n\t\tarrivalDelay: lastLeg.arrivalDelay, // delay is in seconds, acc. to docs\n\t\tdepartureDelay: leg.departureDelay\n\t};\n}\n\n// Get the buses to catch a given route/journey\nasync function busForJourney(journey) {\n\tconst departure = journey.legs[0].departure;\n\n\tconst { journeys } = await hafas.journeys(\n\t\tstations['Munstermannskamp'],\n\t\tstations['Lüneburg'],\n\t\t{\n\t\t\tresults: 20,\n\t\t\tarrival: departure\n\t\t}\n\t);\n\n\tconst buses = [];\n\tfor (const journey of journeys) {\n\t\tif (journey.legs.length > 1)\n\t\t\tcontinue;\n\n\t\tconst leg = journey.legs[0];\n\t\tconst bus = {\n\t\t\tdeparture: new Date(leg.departure),\n\t\t\tarrival: new Date(leg.arrival),\n\t\t\tname: leg.line.name\n\t\t};\n\n\t\t// Minutes between train departure and bus arrival\n\t\tconst trainDeparture = new Date(departure);\n\t\tconst timeScore = (trainDeparture - bus.arrival) / (1000 * 60);\n\n\t\t// Time spent at train station should be less than 30 but more than 4 minutes long\n\t\tif (timeScore >= 30 || timeScore < 4)\n\t\t\tcontinue;\n\n\t\tbuses.push(bus);\n\t}\n\n\treturn buses;\n}\n\n// Converts JS date to normal time format (e.g. 15:45)\nfunction dateToTime(date) {\n\treturn date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n}",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/bahn/api.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "variable",
    "name": "createHafas",
    "memberof": "app/plugins/internal/bahn/api.js",
    "static": true,
    "longname": "app/plugins/internal/bahn/api.js~createHafas",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 198,
    "kind": "variable",
    "name": "hafas",
    "memberof": "app/plugins/internal/bahn/api.js",
    "static": true,
    "longname": "app/plugins/internal/bahn/api.js~hafas",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 199,
    "kind": "variable",
    "name": "stations",
    "memberof": "app/plugins/internal/bahn/api.js",
    "static": true,
    "longname": "app/plugins/internal/bahn/api.js~stations",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"Lüneburg\": string, \"Lübeck\": string, \"Munstermannskamp\": string, \"Universitätsallee\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 200,
    "kind": "function",
    "name": "routesToHL",
    "memberof": "app/plugins/internal/bahn/api.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/plugins/internal/bahn/api.js~routesToHL",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "routesToLG",
    "memberof": "app/plugins/internal/bahn/api.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/plugins/internal/bahn/api.js~routesToLG",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 202,
    "kind": "function",
    "name": "routesToText",
    "memberof": "app/plugins/internal/bahn/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/bahn/api.js~routesToText",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "routes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "busesToText",
    "memberof": "app/plugins/internal/bahn/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/bahn/api.js~busesToText",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "buses",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 204,
    "kind": "function",
    "name": "parseJourney",
    "memberof": "app/plugins/internal/bahn/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/bahn/api.js~parseJourney",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [
      {
        "name": "journey",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"lines\": *, \"departure\": *, \"arrival\": *, \"arrivalDelay\": *, \"departureDelay\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "busForJourney",
    "memberof": "app/plugins/internal/bahn/api.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/plugins/internal/bahn/api.js~busForJourney",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "params": [
      {
        "name": "journey",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 206,
    "kind": "function",
    "name": "dateToTime",
    "memberof": "app/plugins/internal/bahn/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/bahn/api.js~dateToTime",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "params": [
      {
        "name": "date",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 207,
    "kind": "file",
    "name": "app/plugins/internal/bahn/index.js",
    "content": "const { routesToHL } = require('./api');\n\nmodule.exports = function bahnInit(APP) {\n\tconst { state, logger, http } = APP;\n\n\t/**\n\t * @ACTION\n\t * Update Deutsche Bahn route data\n\t *\n\t * @constant BAHN:UPDATE\n\t * @property {object} changes The data to be set\n\t * @example\n\t * state.invoke('BAHN:UPDATE', { })\n\t */\n\tstate.addAction(\n\t\t'BAHN:UPDATE', \n\t\t(state, data) => ({\n\t\t\t...state,\n\t\t\tbahn: data\n\t\t}),\n\t\t(data) => (typeof data === 'object') ? data : false\n\t);\n\n\thttp.addComponentFile('bahn', __dirname + '/component.html');\n\n\tconst refreshInfo = async () => {\n\t\ttry {\n\t\t\tconst hlRoutes = await routesToHL();\n\t\t\t\n\t\t\tstate.invoke('BAHN:UPDATE', {\n\t\t\t\troutes: hlRoutes\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tlogger.error('Error occurred during route check', e);\n\n\t\t\tstate.invoke('BAHN:UPDATE', {\n\t\t\t\troutes: []\n\t\t\t});\n\t\t}\n\t};\n\trefreshInfo();\n\tsetInterval(refreshInfo, 1000 * 60 * 3); // refresh every 3 minutes\n\n\treturn {\n\t\tversion: '0.0.1',\n\t\tdescription: 'A widget to display train timetables'\n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/bahn/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 208,
    "kind": "variable",
    "name": "routesToHL",
    "memberof": "app/plugins/internal/bahn/index.js",
    "static": true,
    "longname": "app/plugins/internal/bahn/index.js~routesToHL",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 209,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/bahn/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/bahn/index.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/bahn/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "APP",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"version\": string, \"description\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 210,
    "kind": "file",
    "name": "app/plugins/internal/covid/api.js",
    "content": "const superagent = require('superagent');\n\nmodule.exports = {\n\tnewestCovidCSV,\n\tparseCityData,\n\tfilterHistoricalData\n};\n\nfunction filterHistoricalData(cities) {\n\tfor (const city in cities) {\n\t\tcities[city] = {\n\t\t\ttotal: cities[city].casesLast7Days,\n\t\t\tr: cities[city].casesPerPopulation\n\t\t}\n\t}\n\n\treturn cities;\n}\n\n// Return routes to Lübeck (includes buses)\nasync function newestCovidCSV() {\n\tconst { text } = await superagent.get('https://interaktiv.morgenpost.de/data/corona/cases.rki.v2.csv');\n\n\treturn text;\n}\n\nfunction parseCityData(csv, cityId) {\n\t// Add a slash in front of dots in the id for the regex to\n\t// take them literally.\n\tconst sanitizedId = cityId.replace(/\\./g, '\\\\.');\n\n\tconst regex = new RegExp(`^(${sanitizedId}.*)`, 'gm');\n\n\tconst regexResult = regex.exec(csv);\n\n\tif (!regexResult) {\n\t\treturn null;\n\t}\n\n\tconst line = regexResult[1];\n\tconst parts = line.split(',');\n\n\treturn {\n\t\tid: cityId,\n\t\tcasesTotal: parseInt(parts[5]),\n\t\tcasesPrevious: parseInt(parts[6]),\n\t\tcasesLast7Days: parseInt(parts[5]) - parseInt(parts[6]),\n\t\tcasesPerPopulation: parseFloat(parts[8]),\n\t\tpopulation: parseInt(parts[7]),\n\t\tdate: parseDate(parts[9]),\n\t\tlabel: parts[3]\n\t};\n}\n\nfunction parseDate(str) {\n\tvar y = str.substr(0, 4),\n\t\tm = str.substr(4, 2) - 1,\n\t\td = str.substr(6, 2);\n\tvar D = new Date(y, m, d);\n\treturn (D.getFullYear() == y && D.getMonth() == m && D.getDate() == d) ? D : null;\n}",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/covid/api.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 211,
    "kind": "variable",
    "name": "superagent",
    "memberof": "app/plugins/internal/covid/api.js",
    "static": true,
    "longname": "app/plugins/internal/covid/api.js~superagent",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/covid/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 212,
    "kind": "function",
    "name": "filterHistoricalData",
    "memberof": "app/plugins/internal/covid/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/covid/api.js~filterHistoricalData",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/covid/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "cities",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 213,
    "kind": "function",
    "name": "newestCovidCSV",
    "memberof": "app/plugins/internal/covid/api.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/plugins/internal/covid/api.js~newestCovidCSV",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/covid/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 214,
    "kind": "function",
    "name": "parseCityData",
    "memberof": "app/plugins/internal/covid/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/covid/api.js~parseCityData",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/covid/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "csv",
        "types": [
          "*"
        ]
      },
      {
        "name": "cityId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"id\": *, \"casesTotal\": *, \"casesPrevious\": *, \"casesLast7Days\": *, \"casesPerPopulation\": *, \"population\": *, \"date\": *, \"label\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 215,
    "kind": "function",
    "name": "parseDate",
    "memberof": "app/plugins/internal/covid/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/covid/api.js~parseDate",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/covid/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "app/plugins/internal/covid/index.js",
    "content": "const { newestCovidCSV, parseCityData, filterHistoricalData } = require('./api');\n\nconst cities = {\n\t'de.ni.03355': 'Lüneburg',\n\t'de.sh.01003': 'Lübeck'\n};\n\n\nmodule.exports = function bahnInit(APP) {\n\tconst { state, logger, http, database } = APP;\n\n\t/**\n\t * @ACTION\n\t * Update COVID data\n\t *\n\t * @constant COVID:UPDATE\n\t * @property {object} changes The data to be set\n\t * @example\n\t * state.invoke('COVID:UPDATE', { cities: { 'city-id': { } } })\n\t */\n\tstate.addAction(\n\t\t'COVID:UPDATE', \n\t\t(state, data) => ({\n\t\t\t...state,\n\t\t\tcovid: data\n\t\t}),\n\t\t(data) => (typeof data === 'object') ? data : false\n\t);\n\n\thttp.addComponentFile('covid', __dirname + '/component.html');\n\n\n\tconst refreshInfo = async () => {\n\t\ttry {\n\t\t\tconst csvText = await newestCovidCSV();\n\t\t\tlet citiesData = { ...cities };\n\n\t\t\tlet historicalData = database.get('covid-data-historical', {});\n\n\t\t\tfor (const id in citiesData) {\n\t\t\t\tlet historicalCityData = historicalData[id] || [];\n\t\t\t\tconst lastHistoricalDataRow = historicalCityData[historicalCityData.length - 1];\n\n\t\t\t\tconst newCityData = parseCityData(csvText, id);\n\n\t\t\t\tif (!lastHistoricalDataRow || lastHistoricalDataRow.date < newCityData.date) {\n\t\t\t\t\t// historicalCityData.push(newCityData);\n\t\t\t\t}\n\n\t\t\t\thistoricalData[id] = historicalCityData;\n\t\t\t\tcitiesData[id] = newCityData;\n\t\t\t}\n\n\t\t\t// database.set('covid-data-historical', historicalData);\n\n\t\t\tstate.invoke('COVID:UPDATE', {\n\t\t\t\tcities: citiesData,\n\t\t\t\thistorical: filterHistoricalData(historicalData)\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tlogger.error('Error occurred during covid API check', e);\n\t\t}\n\t};\n\n\tconst every6Hours = 1000 * 60 * 60 * 6;\n\trefreshInfo();\n\tsetInterval(refreshInfo, every6Hours);\n\n\treturn {\n\t\tversion: '0.0.1',\n\t\tdescription: 'A widget to display COVID data'\n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/covid/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "variable",
    "name": "newestCovidCSV",
    "memberof": "app/plugins/internal/covid/index.js",
    "static": true,
    "longname": "app/plugins/internal/covid/index.js~newestCovidCSV",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/covid/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 218,
    "kind": "variable",
    "name": "cities",
    "memberof": "app/plugins/internal/covid/index.js",
    "static": true,
    "longname": "app/plugins/internal/covid/index.js~cities",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/covid/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"de.ni.03355\": string, \"de.sh.01003\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 219,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/covid/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/covid/index.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/covid/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "APP",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"version\": string, \"description\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 220,
    "kind": "file",
    "name": "app/plugins/internal/dashboard-components/index.js",
    "content": "module.exports = function dashboardExample(APP) {\n\tconst { http } = APP;\n\n\thttp.addComponentFile('links', __dirname + '/links.html');\n\n\treturn {\n\t\tversion: '0.0.1',\n\t\tdescription: 'Dashboard Components'\n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/dashboard-components/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 221,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/dashboard-components/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/dashboard-components/index.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/dashboard-components/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "APP",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"version\": string, \"description\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 222,
    "kind": "file",
    "name": "app/plugins/internal/dashboard-example.js",
    "content": "/**\n * The APP object\n * @typedef {Object} PluginContext\n * @type {object}\n * @property {Object} state\n * @property {Object} logger\n * @property {Object} config\n * @property {Object} dashboard\n * @property {Object} http\n */\n\n/**\n * The plugin object\n * @typedef {Object} Plugin\n * @property {string?} name\n * @property {string} version\n * @property {string} description\n * @property {string?} author\n */\n\n/**\n * Initialize the plugin\n *\n * @param {PluginContext} APP\n * @returns {Plugin}\n */\nmodule.exports = function dashboardExample(APP) {\n\tconst { state, logger, config, dashboard } = APP;\n\n\n\treturn {\n\t\tversion: '0.0.1',\n\t\tdescription: 'Dashboard Example'\n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/dashboard-example.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "typedef",
    "name": "PluginContext",
    "memberof": "app/plugins/internal/dashboard-example.js",
    "static": true,
    "longname": "app/plugins/internal/dashboard-example.js~PluginContext",
    "access": "public",
    "description": "The APP object",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "dashboard",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "PluginContext"
    }
  },
  {
    "__docId__": 224,
    "kind": "typedef",
    "name": "Plugin",
    "memberof": "app/plugins/internal/dashboard-example.js",
    "static": true,
    "longname": "app/plugins/internal/dashboard-example.js~Plugin",
    "access": "public",
    "description": "The plugin object",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string?"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string?"
        ],
        "spread": false,
        "optional": false,
        "name": "author",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Plugin"
    }
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/dashboard-example.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/dashboard-example.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/dashboard-example.js",
    "importStyle": null,
    "description": "Initialize the plugin",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Plugin}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PluginContext"
        ],
        "spread": false,
        "optional": false,
        "name": "APP",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Plugin"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 226,
    "kind": "file",
    "name": "app/plugins/internal/file-browser.js",
    "content": "\n/**\n * The APP object\n * @typedef {Object} PluginContext\n * @type {object}\n * @property {Object} state\n * @property {Object} logger\n * @property {Object} config\n * @property {Object} dashboard\n * @property {Object} http\n */\n\n\n/**\n * Initialize the plugin\n *\n * @param {PluginContext} APP\n * @returns {Plugin}\n */\nmodule.exports = function fileBrowserInit(APP) {\n\tAPP.http.raw.proxy(\n\t\t'/files', \n\t\t'http://localhost:3002', \n\t\t{\n\t\t\tonProxyReq(proxyReq, req) {\n\t\t\t\tproxyReq.setHeader('X-Files-Auth', req.user.username);\n\t\t\t}\n\t\t}\n\t);\n\n\treturn {\n\t\tversion: '0.0.1',\n\t\tdescription: 'An iFrame to host filebrowser.xyz'\n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/file-browser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 227,
    "kind": "typedef",
    "name": "PluginContext",
    "memberof": "app/plugins/internal/file-browser.js",
    "static": true,
    "longname": "app/plugins/internal/file-browser.js~PluginContext",
    "access": "public",
    "description": "The APP object",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "dashboard",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "PluginContext"
    }
  },
  {
    "__docId__": 228,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/file-browser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/file-browser.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/file-browser.js",
    "importStyle": null,
    "description": "Initialize the plugin",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Plugin}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PluginContext"
        ],
        "spread": false,
        "optional": false,
        "name": "APP",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Plugin"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 229,
    "kind": "file",
    "name": "app/plugins/internal/homekit/index.js",
    "content": "const { HapClient } = require('@oznu/hap-client');\n\nmodule.exports = function homekitInit(APP) {\n\tconst { state, logger, config, http } = APP;\n\n\t/**\n\t * @ACTION\n\t * @TODO Turn this into an EVENT\n\n\t * This is supposed to be a no op action because \n\t * we still have to register it with the state system.\n\t */\n\tstate.addAction(\n\t\t'HOMEKIT:MODIFY-CHARACTERISTICS', \n\t\t(state) => {\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\t\t},\n\t\t(data) => data\n\t);\n\n\t/**\n\t * @ACTION\n\t * Set homebridge config initialization state to indicate wether the pin is configured.\n\t *\n\t * @constant HOMEKIT:SET-INITIALIZED\n\t * @property {Boolean} initialized \n\t * @example\n\t * state.invoke('HOMEKIT:SET-INITIALIZED', { initialized: false })\n\t */\n\tstate.addAction(\n\t\t'HOMEKIT:SET-INITIALIZED', \n\t\t(state, { initialized = false }) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thomekit: {\n\t\t\t\t\tinitialized: !!initialized\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t(data) => data\n\t);\n\n\t/**\n\t * @ACTION\n\t * Set the devices homebridge sees\n\t *\n\t * @constant HOMEKIT:SET-SERVICES\n\t * @property {Object} service The video object to push onto the queue.\n\t * @property {string} service.uniqueId A unique ID for the service.\n\t * @property {number} service.iid A unique ID for the service (used for identification internally).\n\t * @property {string} service.name Name of the service\n\t * @property {string} service.type Type of the service\n\t * @property {Array} service.characteristics Array of characteristics\n\t * @property {Array} service.values Array of values for the characteristics\n\t * @example\n\t * state.invoke('HOMEKIT:SET-SERVICES', { services: { 'serviceID': { ...service }}})\n\t */\n\tstate.addAction(\n\t\t'HOMEKIT:SET-SERVICES', \n\t\t(state, { services = {}, reset = false }) => {\n\t\t\t/*\n\t\t\t\tService: {\n\t\t\t\t\tuniqueId: string,\n\t\t\t\t\tiid: string,\n\t\t\t\t\tname: string,\n\t\t\t\t\ttype: 'Switch',\n\t\t\t\t\tcharacteristics: [{}],\n\t\t\t\t\tvalues: []\n\t\t\t\t}\n\t\t\t*/\n\n\t\t\tconst value = reset ? services : { ...state.homekit.services, ...services };\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thomekit: {\n\t\t\t\t\t...state.homekit,\n\t\t\t\t\tservices: value\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t(data) => {\n\t\t\tconst allItemsComplete = Object.values(data.services)\n\t\t\t\t.filter(\n\t\t\t\t\tservice =>\n\t\t\t\t\t\tservice.uniqueId\n\t\t\t\t\t\t&& service.iid\n\t\t\t\t\t\t&& service.name\n\t\t\t\t\t\t&& service.type\n\t\t\t\t\t\t&& Array.isArray(service.characteristics)\n\t\t\t\t\t\t&& Array.isArray(service.values)\n\t\t\t\t).length > 0;\n\n\t\t\tif (data.services && !allItemsComplete) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t);\n\n\thttp.addComponentFile('homekitSwitches', __dirname + '/component.html');\n\n\n\tif (!config.homebridge.pin) {\n\t\tlogger.warn(\n\t\t\t'Won\\'t be able to connect to Homebridge, as the secret pin is not defined in config file.'\n\t\t);\n\t\tstate.invoke('HOMEKIT:SET-INITIALIZED', { initialized: false });\n\t\treturn;\n\t}\n\n\tconst hap = new HapClient({\n\t\tpin: config.homebridge.pin,\n\t\tlogger: {\n\t\t\tlog: logger.debug,\n\t\t\tinfo: logger.debug,\n\t\t\terror: logger.error,\n\t\t\twarning: logger.warn,\n\t\t\tverbose: logger.debug\n\t\t},\n\t\tconfig: {\n\t\t\tdebug: true\n\t\t},\n\t});\n\n\t// TODO: Error detection for homebridge connection or something. I do\n\t// think that HapClient does error logging on its own but ¯\\_(ツ)_/¯\n\tstate.invoke('HOMEKIT:SET-INITIALIZED', { initialized: true });\n\n\tlet monitor = null;\n\n\thap.on('instance-discovered', async () => {\n\t\tlogger.debug('Discovered new HAP instance');\n\t\tconst servicesList = await hap.getAllServices();\n\n\t\tlet servicesData = {};\n\t\tfor (const service of servicesList) {\n\t\t\t// servicesActions[service.uniqueId] = {\n\t\t\t// \tgetCharacteristic: service.getCharacteristic\n\t\t\t// };\n\n\t\t\tservicesData[service.uniqueId] = simplifyService(service);\n\t\t}\n\n\t\tstate.invoke(\n\t\t\t'HOMEKIT:SET-SERVICES',\n\t\t\t{\n\t\t\t\tservices: servicesData,\n\t\t\t\treset: true\n\t\t\t}\n\t\t);\n\n\t\tif (monitor) {\n\t\t\tmonitor.finish();\n\t\t\tmonitor = null;\n\t\t}\n\n\t\t// Setup monitoring of characteristics to detect changes\n\t\tmonitor = await hap.monitorCharacteristics();\n\t\tconst updateHandler = (data) => {\n\t\t\tlogger.debug('Received characteristics update', data);\n\n\t\t\tlet servicesData = {};\n\t\t\tfor (const service of data) {\n\t\t\t\tservicesData[service.uniqueId] = simplifyService(service);\n\t\t\t}\n\n\t\t\tstate.invoke(\n\t\t\t\t'HOMEKIT:SET-SERVICES',\n\t\t\t\t{\n\t\t\t\t\tservices: servicesData\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\tmonitor.on('service-update', updateHandler);\n\t});\n\n\tstate.subscribe('action:HOMEKIT:MODIFY-CHARACTERISTICS', async (context) => {\n\t\tconst { uniqueId, changes = {} } = context.actionData;\n\n\t\tlogger.debug(`Modifying characteristics in service ${uniqueId} with changes ${JSON.stringify(changes, null, 2)}`);\n\n\t\tconst services = await hap.getAllServices();\n\t\tconst service = services.find(service => service.uniqueId === uniqueId);\n\t\tif (!service) {\n\t\t\tlogger.error(`Could not find service with id: ${uniqueId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const characteristicName in changes) {\n\t\t\tconst newValue = changes[characteristicName];\n\n\t\t\tconst characteristic = service.getCharacteristic(characteristicName);\n\n\t\t\tif (!characteristic || !characteristic.setValue) {\n\t\t\t\tlogger.error(`Could not find characteristic with name: ${characteristicName}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcharacteristic.setValue(newValue);\n\t\t}\n\t});\n\n\treturn {\n\t\tauthor: 'Lukas Mateffy (@capevace)',\n\t\tversion: '0.0.1',\n\t\tdescription: 'HomeKit switch bridge'\n\t};\n};\n\nfunction simplifyService(inputService) {\n\treturn {\n\t\tuniqueId: inputService.uniqueId,\n\t\tiid: inputService.iid,\n\t\tname: inputService.serviceName,\n\t\ttype: inputService.type,\n\t\tcharacteristics: inputService.serviceCharacteristics,\n\t\tvalues: inputService.values\n\t};\n}",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/homekit/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 230,
    "kind": "variable",
    "name": "HapClient",
    "memberof": "app/plugins/internal/homekit/index.js",
    "static": true,
    "longname": "app/plugins/internal/homekit/index.js~HapClient",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/homekit/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/homekit/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/homekit/index.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/homekit/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "APP",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"author\": string, \"version\": string, \"description\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "simplifyService",
    "memberof": "app/plugins/internal/homekit/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/homekit/index.js~simplifyService",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/homekit/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 214,
    "undocument": true,
    "params": [
      {
        "name": "inputService",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"uniqueId\": *, \"iid\": *, \"name\": *, \"type\": *, \"characteristics\": *, \"values\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 233,
    "kind": "file",
    "name": "app/plugins/internal/layout.js",
    "content": "module.exports = async function layoutInit(APP) {\n\tconst { state, database } = APP;\n\n\t/**\n\t * @ACTION\n\t * Update dashboard layout\n\t *\n\t * @constant LAYOUT:UPDATE\n\t * @property {object} changes The data to be set\n\t * @example\n\t * state.invoke('LAYOUT:UPDATE', { layout: [] })\n\t */\n\tstate.addAction(\n\t\t'LAYOUT:UPDATE', \n\t\t(state, data) => ({\n\t\t\t...state,\n\t\t\tlayout: data.layout\n\t\t}),\n\t\t(data) => (Array.isArray(data.layout)) ? data : false\n\t);\n\n\t/**\n\t * @ACTION\n\t * Reset the dashboard layout to defaults\n\t *\n\t * @constant LAYOUT:RESET\n\t * @example\n\t * state.invoke('LAYOUT:RESET')\n\t */\n\tstate.addAction(\n\t\t'LAYOUT:RESET', \n\t\t(state, data) => ({\n\t\t\t...state,\n\t\t\tlayout: []\n\t\t}),\n\t\t(data) => true\n\t);\n\n\n\tconst initialLayout = [\n\t\t{ x: 0, y: 0, w: 12, h: 2, i: '0', component: 'basic-header', moved: false },\n\t\t{ x: 0, y: 8, w: 4, h: 3, i: '1', component: 'links', moved: false },\n\t\t{ x: 8, y: 8, w: 4, h: 10, i: '2', component: 'bahn', moved: false },\n\t\t{ x: 0, y: 2, w: 12, h: 4, i: '3', component: 'homekitSwitches', moved: false },\n\t\t{ x: 0, y: 8, w: 2, h: 7, i: '4', component: 'covid', moved: false }\n\t];\n\n\tconst layout = database.get('layout', initialLayout);\n\tstate.invoke('LAYOUT:UPDATE', {\n\t\tlayout\n\t});\n\n\tstate.subscribe('action:LAYOUT:UPDATE', (data) => {\n\t\tdatabase.set('layout', data.actionData.layout);\n\t});\n\n\tstate.subscribe('action:LAYOUT:RESET', () => {\n\t\tdatabase.set('layout', initialLayout);\n\t\tstate.invoke('LAYOUT:UPDATE', {\n\t\t\tlayout: initialLayout\n\t\t});\n\t});\n\n\treturn {\n\t\tinternal: true,\n\t\tversion: '0.0.1',\n\t\tdescription: 'Dashboard Layout Engine'\n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/layout.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 234,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/layout.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/plugins/internal/layout.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/layout.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "APP",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"internal\": boolean, \"version\": string, \"description\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 235,
    "kind": "file",
    "name": "app/plugins/internal/notifications.js",
    "content": "const chalk = require('chalk');\nconst uuid = require('uuid/v4');\n\nmodule.exports = function bahnInit(APP) {\n\tconst { state, logger } = APP;\n\n\t/**\n\t * @ACTION\n\t * Create a notification\n\t * @constant NOTIFICATIONS:CREATE\n\t * @property {string} title The title of the notification.\n\t * @property {string} message The message of the notification.\n\t * @example demo-action-call\n\t */\n\tstate.addAction(\n\t\t'NOTIFICATIONS:CREATE', \n\t\t(state, { title, message }) => ({\n\t\t\t...state,\n\t\t\tnotifications: [\n\t\t\t\t...state.notifications,\n\t\t\t\t{ title, message, unread: true, id: uuid(), date: new Date() }\n\t\t\t]\n\t\t}),\n\t\t(data) => ('title' in data) ? data : false\n\t);\n\n\t/**\n\t * @ACTION\n\t * Delete a notification.\n\t * @constant NOTIFICATIONS:DELETE\n\t * @property {string} id The id.\n\t * @example demo-action-call\n\t */\n\tstate.addAction(\n\t\t'NOTIFICATIONS:DELETE', \n\t\t(state, { id }) => {\n\t\t\tconst newNotifications = state.notifications.filter(\n\t\t\t\tnotification => notification.id !== id\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: newNotifications\n\t\t\t};\n\t\t},\n\t\t(data) => ('id' in data) ? data : false\n\t);\n\n\t/**\n\t * @ACTION\n\t * Mark a notification as read.\n\t * @constant NOTIFICATIONS:MARK-AS-READ\n\t * @property {string} id The id.\n\t * @example demo-action-call\n\t */\n\tstate.addAction(\n\t\t'NOTIFICATIONS:MARK-AS-READ', \n\t\t(state, { id }) => {\n\t\t\tconst newNotifications = state.notifications.map(notification =>\n\t\t\t\tnotification.id === id\n\t\t\t\t\t? { ...notification, unread: false }\n\t\t\t\t\t: notification\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: newNotifications\n\t\t\t};\n\t\t},\n\t\t(data) => ('id' in data) ? data : false\n\t);\n\n\t/**\n\t * @ACTION\n\t * Set all notifications. Used for clear-all effects.\n\t * @constant NOTIFICATIONS:SET\n\t * @property {array} notifications An array of notifications.\n\t * @example demo-action-call\n\t */\n\tstate.addAction(\n\t\t'NOTIFICATIONS:SET', \n\t\t(state, { notifications }) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications\n\t\t\t};\n\t\t},\n\t\t(data) => ('notifications' in data && Array.isArray(data.notifications)) ? data : false\n\t);\n\n\n\tstate.subscribe(\n\t\t'action:NOTIFICATIONS:CREATE',\n\t\t({ actionData: { title, message } }) => {\n\t\t\tlogger.info(`${chalk.bold(title)}: ${message}`);\n\t\t}\n\t);\n\n\treturn {\n\t\tinternal: true,\n\t\tversion: '0.0.1',\n\t\tdescription: 'Internal Notification System'\n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/notifications.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 236,
    "kind": "variable",
    "name": "chalk",
    "memberof": "app/plugins/internal/notifications.js",
    "static": true,
    "longname": "app/plugins/internal/notifications.js~chalk",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/notifications.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 237,
    "kind": "variable",
    "name": "uuid",
    "memberof": "app/plugins/internal/notifications.js",
    "static": true,
    "longname": "app/plugins/internal/notifications.js~uuid",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/notifications.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 238,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/notifications.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/notifications.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/notifications.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "APP",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"internal\": boolean, \"version\": string, \"description\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 239,
    "kind": "file",
    "name": "app/plugins/internal/spotify/api.js",
    "content": "module.exports = function api(APP) {\n\tconst { state, database, logger, config } = APP;\n\t\n\t// Request an access token from the Spotify API using an auth code.\n\tasync function requestAccessToken(code) {\n\t\ttry {\n\t\t\tconst result = await superagent\n\t\t\t\t.post('https://accounts.spotify.com/api/token')\n\t\t\t\t.set('Content-Type', 'application/x-www-form-urlencoded')\n\t\t\t\t.set(\n\t\t\t\t\t'Authorization',\n\t\t\t\t\t`Basic ${Buffer.from(\n\t\t\t\t\t\tconfig.spotify.clientId + ':' + config.spotify.secret\n\t\t\t\t\t).toString('base64')}`\n\t\t\t\t)\n\t\t\t\t.send({\n\t\t\t\t\tcode: code,\n\t\t\t\t\tredirect_uri: `${config.http.url}/spotify/auth/callback`,\n\t\t\t\t\tgrant_type: 'authorization_code'\n\t\t\t\t});\n\n\t\t\tconst { access_token, refresh_token, expires_in } = result.body;\n\n\t\t\t// expires_in is in seconds. So we add it to the time as milliseconds by\n\t\t\t// multiplying by 1000.\n\t\t\tlet expiresAt = new Date();\n\t\t\texpiresAt.setTime(expiresAt.getTime() + expires_in * 1000);\n\n\t\t\treturn {\n\t\t\t\taccessToken: access_token,\n\t\t\t\texpiresAt,\n\t\t\t\trefreshToken: refresh_token\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tthrow e.body || e;\n\t\t}\n\t}\n\n\t// Get new access tokens from the Spotify API using a refresh token\n\tasync function refreshAccessToken(refreshToken) {\n\t\ttry {\n\t\t\tconst response = await superagent\n\t\t\t\t.post('https://accounts.spotify.com/api/token')\n\t\t\t\t.set('Content-Type', 'application/x-www-form-urlencoded')\n\t\t\t\t.set(\n\t\t\t\t\t'Authorization',\n\t\t\t\t\t`Basic ${Buffer.from(\n\t\t\t\t\t\t`${config.spotify.clientId}:${config.spotify.secret}`\n\t\t\t\t\t).toString('base64')}`\n\t\t\t\t)\n\t\t\t\t.send({\n\t\t\t\t\trefresh_token: refreshToken,\n\t\t\t\t\tgrant_type: 'refresh_token'\n\t\t\t\t});\n\n\t\t\tconst { access_token, expires_in } = response.body;\n\n\t\t\t// expires_in is in seconds. So we add it to the time as milliseconds by\n\t\t\t// multiplying by 1000.\n\t\t\tlet expiresAt = new Date();\n\t\t\texpiresAt.setTime(expiresAt.getTime() + expires_in * 1000);\n\n\t\t\treturn { accessToken: access_token, expiresAt, refreshToken };\n\t\t} catch (e) {\n\t\t\tthrow e.body || e;\n\t\t}\n\t}\n\n\t// Update the tokens in the database and state\n\tfunction authorizeSpotify(accessToken, expiresAt, refreshToken) {\n\t\tconst data = { accessToken, expiresAt, refreshToken };\n\n\t\t// Schedule a token refresh at a given time\n\t\tscheduleTokenRefresh(expiresAt, refreshToken);\n\n\t\tlogger.info('Successfully authorized Spotify');\n\n\t\t// Save to database so its persistent and then update state so clients are notified.\n\t\tdatabase.set('spotify', data);\n\t\tstate.invoke('SPOTIFY:UPDATE-TOKEN', data);\n\t}\n\n\tfunction scheduleTokenRefresh(expiresAt, refreshToken) {\n\t\tconst dateDifference = Math.max(0, expiresAt.getTime() - Date.now());\n\t\tlogger.debug(`Scheduled token refresh in ${dateDifference / 1000}s.`);\n\n\t\tsetTimeout(async () => {\n\t\t\ttry {\n\t\t\t\tconst data = await refreshAccessToken(refreshToken);\n\t\t\t\tauthorizeSpotify(\n\t\t\t\t\tdata.accessToken,\n\t\t\t\t\tdata.expiresAt,\n\t\t\t\t\tdata.refreshToken\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\tlogger.error('Couldn\\'t refresh access token', e);\n\t\t\t\tstate.invoke('NOTIFICATIONS:CREATE', {\n\t\t\t\t\ttitle: `Spotify couldn't be authorized.`,\n\t\t\t\t\tmessage: e.message\n\t\t\t\t});\n\t\t\t}\n\t\t}, dateDifference);\n\t}\n\n\tfunction updateTokenState(state, { accessToken, expiresAt, refreshToken }) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tspotify: {\n\t\t\t\t...state.spotify,\n\t\t\t\taccessToken,\n\t\t\t\texpiresAt,\n\t\t\t\trefreshToken\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction validateTokenUpdate(data) {\n\t\treturn ('accessToken' in data && 'expiresAt' in data && 'refreshToken' in data) \n\t\t\t? data\n\t\t\t: false;\n\t}\n\n\treturn { \n\t\trequestAccessToken, \n\t\trefreshAccessToken, \n\t\tauthorizeSpotify, \n\t\tscheduleTokenRefresh, \n\t\tupdateTokenState, \n\t\tvalidateTokenUpdate \n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/spotify/api.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/spotify/api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/spotify/api.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/api.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "APP",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"requestAccessToken\": *, \"refreshAccessToken\": *, \"authorizeSpotify\": *, \"scheduleTokenRefresh\": *, \"updateTokenState\": *, \"validateTokenUpdate\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "app/plugins/internal/spotify/index.js",
    "content": "/*global Buffer */\nconst config = require('@config');\nconst database = require('@database');\nconst state = require('@state');\nconst logger = require('@helpers/logger').createLogger('Spotify', 'greenBright');\n\nconst superagent = require('superagent');\n\nconst makeAPI = require('./api');\nconst routes = require('./routes');\n\nmodule.exports = function spotifyInit(APP) {\n\tconst { state, database, logger, config, http } = APP;\n\tconst API = makeAPI(APP);\n\n\tconst spotifyData = database.get('spotify', {});\n\t\n\n\t/**\n\t * @ACTION\n\t * Update the Spotify access token thats saved in the database and state.\n\t *\n\t * @constant SPOTIFY:UPDATE-TOKEN\n\t * @property {string} accessToken The access token to update.\n\t * @property {Date} expiresAt The date the access token expires at.\n\t * @property {string} refreshToken The token to request a new access token with.\n\t * @example demo-action-call\n\t */\n\tstate.addAction(\n\t\t'SPOTIFY:UPDATE-TOKEN', \n\t\tAPI.updateTokenState, \n\t\tAPI.validateTokenUpdate\n\t);\n\n\tstate.subscribe('spotify:callback', async ({ code }) => {\n\t\tlogger.debug('Requesting access token from Spotify.');\n\n\t\ttry {\n\t\t\tconst data = await API.requestAccessToken(code);\n\t\t\tAPI.authorizeSpotify(\n\t\t\t\tdata.accessToken,\n\t\t\t\tdata.expiresAt,\n\t\t\t\tdata.refreshToken\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tlogger.error('Couldnt request access token.', e);\n\t\t}\n\t});\n\n\t// If Spotify isnt authorized, we cant use it.\n\tif (!spotifyData.accessToken) {\n\t\tlogger.warn(\n\t\t\t`Spotify isnt authorized. Visit ${require('chalk').cyan(\n\t\t\t\t`${config.http.url}/spotify/auth`\n\t\t\t)} and log in.`\n\t\t);\n\t} else {\n\t\tconst expiresAt = new Date(spotifyData.expiresAt);\n\t\tconst now = new Date();\n\n\t\t// Get a new token, if the old one has expired.\n\t\t// If not, set a timeout to get a new token ahead of time.\n\t\tif (expiresAt <= now) {\n\t\t\tlogger.debug('Access token has expired. Requesting new token.');\n\n\t\t\tAPI.scheduleTokenRefresh(new Date(), spotifyData.refreshToken);\n\t\t} else {\n\t\t\tlogger.debug(`Access token is still fresh.`);\n\t\t\tAPI.authorizeSpotify(\n\t\t\t\tspotifyData.accessToken,\n\t\t\t\tnew Date(spotifyData.expiresAt),\n\t\t\t\tspotifyData.refreshToken\n\t\t\t);\n\t\t}\n\t}\n\n\t// Register Page component\n\thttp.addComponentFile('spotify-page', __dirname + '/spotify-page.html');\n\n\t// Register Page in Vue Router\n\thttp.addPage('/spotify', 'Spotify', 'spotify-page', { icon: 'spotify-icon', menu: 200 });\n\n\t// Register HTTP routes\n\troutes(APP);\n\n\treturn {\n\t\tversion: '0.0.1',\n\t\tdescription: 'A built in Spotify player'\n\t};\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/spotify/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "name": "config",
    "memberof": "app/plugins/internal/spotify/index.js",
    "static": true,
    "longname": "app/plugins/internal/spotify/index.js~config",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 243,
    "kind": "variable",
    "name": "database",
    "memberof": "app/plugins/internal/spotify/index.js",
    "static": true,
    "longname": "app/plugins/internal/spotify/index.js~database",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 244,
    "kind": "variable",
    "name": "state",
    "memberof": "app/plugins/internal/spotify/index.js",
    "static": true,
    "longname": "app/plugins/internal/spotify/index.js~state",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 245,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/plugins/internal/spotify/index.js",
    "static": true,
    "longname": "app/plugins/internal/spotify/index.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 246,
    "kind": "variable",
    "name": "superagent",
    "memberof": "app/plugins/internal/spotify/index.js",
    "static": true,
    "longname": "app/plugins/internal/spotify/index.js~superagent",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 247,
    "kind": "variable",
    "name": "makeAPI",
    "memberof": "app/plugins/internal/spotify/index.js",
    "static": true,
    "longname": "app/plugins/internal/spotify/index.js~makeAPI",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 248,
    "kind": "variable",
    "name": "routes",
    "memberof": "app/plugins/internal/spotify/index.js",
    "static": true,
    "longname": "app/plugins/internal/spotify/index.js~routes",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 249,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/spotify/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/spotify/index.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "APP",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"version\": string, \"description\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 250,
    "kind": "file",
    "name": "app/plugins/internal/spotify/routes.js",
    "content": "const fs = require('fs/promises');\nconst express = require('express');\nconst queryString = require('querystring');\n\nmodule.exports = function routes(APP) {\n\tconst { http, state, logger, config } = APP;\n\n\thttp.get('/auth', (req, res) => {\n\t\tres.redirect(\n\t\t\t`https://accounts.spotify.com/authorize?${queryString.stringify({\n\t\t\t\tresponse_type: 'code',\n\t\t\t\tclient_id: config.spotify.clientId,\n\t\t\t\tscope: 'user-read-private user-read-email user-read-birthdate user-read-playback-state user-modify-playback-state user-library-read playlist-read-private streaming playlist-modify-public playlist-modify-private user-library-modify ugc-image-upload user-follow-modify user-follow-read',\n\t\t\t\tredirect_uri: `${req.hostUrl}/auth/callback`,\n\t\t\t\tstate: 'whatthefuckisthis'\n\t\t\t})}`\n\t\t);\n\t});\n\n\t// Create the callback route for spotify to call.\n\t// This is called in response to an auth request.\n\t// The response will contain the auth code used to request access tokens.\n\thttp.get('/auth/callback', async (req, res) => {\n\t\tconst code = req.query.code || null;\n\t\tconst stateId = req.query.state || null;\n\n\t\tif (stateId === null) {\n\t\t\tlogger.error('Authentication failed. State mismatch:', stateId);\n\t\t\tres.status(500).json({\n\t\t\t\tmessage: 'State mismatch.'\n\t\t\t});\n\t\t} else {\n\t\t\t// Emit event containing auth code so the Spotify service can request access tokens.\n\t\t\tstate.emitEvent('spotify:callback', {\n\t\t\t\tcode\n\t\t\t});\n\n\t\t\tres.redirect(http.baseUrl);\n\t\t}\n\t});\n\n\t// // Create the callback route for spotify to call.\n\t// // This is called in response to an auth request.\n\t// // The response will contain the auth code used to request access tokens.\n\t// http.get('/auth/access_token', async (req, res) => {\n\t// \tconst code = req.query.code || null;\n\t// \tconst stateId = req.query.state || null;\n\n\t// \tif (stateId === null) {\n\t// \t\tlog('Authentication failed. State mismatch:', stateId);\n\t// \t\tres.status(500).json({\n\t// \t\t\tmessage: 'State mismatch.'\n\t// \t\t});\n\t// \t} else {\n\t// \t\t// Emit event containing auth code so the Spotify service can request access tokens.\n\t// \t\tstate.emitEvent('spotify:callback', {\n\t// \t\t\tcode\n\t// \t\t});\n\n\t// \t\tres.json('Logging in');\n\t// \t}\n\t// });\n\n\tconst renderSpotify = async (req, res) => {\n\t\tconst spotifyData = state.get().spotify;\n\t\t\n\t\tif (!spotifyData || !spotifyData.accessToken) {\n\t\t\tres.redirect(http.baseUrl + '/auth');\n\t\t} else {\n\t\t\tconst indexFile = await fs.readFile(config.spotify.path + '/index.html')\n\t\t\t\t.toString()\n\t\t\t\t.replace(/<MISSION_CONTROL_URL>/g, config.http.url)\n\t\t\t\t.replace(/<MISSION_CONTROL_TOKEN>/g, req.session.jwt)\n\t\t\t\t.replace(/<MISSION_CONTROL_SPOTIFY_TOKEN>/g, state.get().spotify.accessToken)\n\t\t\t\t.replace(/<MISSION_CONTROL_SPOTIFY_EXPIRY>/g, state.get().spotify.expiresAt);\n\n\t\t\tres.type('text/html').send(indexFile);\n\t\t}\n\t};\n\n\thttp.get('/', renderSpotify);\n\thttp.raw.get('/spotify', renderSpotify);\n\n\thttp.use(\n\t\t'/',\n\t\texpress.static(config.spotify.path)\n\t);\n}",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/spotify/routes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "variable",
    "name": "fs",
    "memberof": "app/plugins/internal/spotify/routes.js",
    "static": true,
    "longname": "app/plugins/internal/spotify/routes.js~fs",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/routes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 252,
    "kind": "variable",
    "name": "express",
    "memberof": "app/plugins/internal/spotify/routes.js",
    "static": true,
    "longname": "app/plugins/internal/spotify/routes.js~express",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/routes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 253,
    "kind": "variable",
    "name": "queryString",
    "memberof": "app/plugins/internal/spotify/routes.js",
    "static": true,
    "longname": "app/plugins/internal/spotify/routes.js~queryString",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/routes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/spotify/routes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/spotify/routes.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/spotify/routes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "APP",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "app/plugins/internal/system-info/index.js",
    "content": "const si = require('systeminformation');\nconst publicIp = require('public-ip');\nconst pkg = require('@root/package.json');\n\nmodule.exports = async function systemInfoInit(APP) {\n\tconst { state, database, config, http } = APP;\n\n\thttp.addComponentFile('basic-header', __dirname + '/header.html');\n\n\t/**\n\t * @ACTION\n\t * Update the system info statistics table.\n\t *\n\t * @constant SYSTEM-INFO:UPDATE\n\t */\n\tstate.addAction(\n\t\t'SYSTEM-INFO:UPDATE', \n\t\t(state, data) => ({\n\t\t\t...state,\n\t\t\tsystemInfo: data\n\t\t}),\n\t\t(data) => (typeof data === 'object') ? data : false\n\t);\n\n\tconst [system, cpu, osInfo] = await Promise.all([\n\t\tsi.system(),\n\t\tsi.cpu(),\n\t\tsi.osInfo()\n\t]);\n\n\tconst staticInfo = {\n\t\tsystem: {\n\t\t\tmanufacturer: system.manufacturer,\n\t\t\tmodel: system.model\n\t\t},\n\t\tcpu: {\n\t\t\tmanufacturer: cpu.manufacturer,\n\t\t\tbrand: cpu.brand,\n\t\t\tcores: cpu.cores,\n\t\t\tspeedMax: cpu.speedMax,\n\t\t\tmainTemperature: -1\n\t\t},\n\t\tos: {\n\t\t\tplatform: osInfo.platform,\n\t\t\tdistro: osInfo.distro,\n\t\t\tversion: osInfo.release,\n\t\t\tname: osInfo.codename,\n\t\t\tarchitecture: osInfo.arch,\n\t\t\thostname: osInfo.hostname\n\t\t},\n\t\tversion: config.version\n\t};\n\n\tconst refreshInfo = async () => {\n\t\tconst [\n\t\t\ttemp,\n\t\t\tmemory,\n\t\t\tnetworkInterfaces,\n\t\t\tcurrentLoad,\n\t\t\tip\n\t\t] = await Promise.all([\n\t\t\tsi.cpuTemperature(),\n\t\t\tsi.mem(),\n\t\t\tsi.networkInterfaces(),\n\t\t\tsi.currentLoad(),\n\t\t\tpublicIp.v4({ https: true }).catch(() => null)\n\t\t]);\n\n\t\tconst network = networkInterfaces.reduce((mainNetwork, iface) => {\n\t\t\tif (mainNetwork !== null) return mainNetwork;\n\n\t\t\tif (iface.ip4 !== '' && iface.ip4 !== '127.0.0.1') return iface;\n\n\t\t\treturn mainNetwork;\n\t\t}, null);\n\n\t\tconst data = {\n\t\t\t...staticInfo,\n\t\t\tcpu: {\n\t\t\t\t...staticInfo.cpu,\n\t\t\t\tmainTemperature: temp.main,\n\t\t\t\tcurrentLoad: currentLoad.currentload,\n\t\t\t\tcores: currentLoad.cpus.map(cpu => ({\n\t\t\t\t\tload: cpu.load\n\t\t\t\t}))\n\t\t\t},\n\t\t\tmemory: {\n\t\t\t\ttotal: memory.total,\n\t\t\t\tfree: memory.free,\n\t\t\t\tused: memory.used\n\t\t\t},\n\t\t\tnetwork: {\n\t\t\t\tinternalIPv4: network ? network.ip4 : '-',\n\t\t\t\tpublicIPv4: ip || '-',\n\t\t\t\tmac: network ? network.mac : '-',\n\t\t\t\tspeed: network ? network.speed : '-'\n\t\t\t}\n\t\t};\n\n\t\tstate.invoke('SYSTEM-INFO:UPDATE', data);\n\t};\n\trefreshInfo();\n\tsetInterval(refreshInfo, 20000);\n\n\treturn {\n\t\tinternal: true,\n\t\tversion: '0.0.1',\n\t\tdescription: 'System Information plugin'\n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/system-info/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "variable",
    "name": "si",
    "memberof": "app/plugins/internal/system-info/index.js",
    "static": true,
    "longname": "app/plugins/internal/system-info/index.js~si",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/system-info/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 257,
    "kind": "variable",
    "name": "publicIp",
    "memberof": "app/plugins/internal/system-info/index.js",
    "static": true,
    "longname": "app/plugins/internal/system-info/index.js~publicIp",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/system-info/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 258,
    "kind": "variable",
    "name": "pkg",
    "memberof": "app/plugins/internal/system-info/index.js",
    "static": true,
    "longname": "app/plugins/internal/system-info/index.js~pkg",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/system-info/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/system-info/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "app/plugins/internal/system-info/index.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/system-info/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "APP",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"internal\": boolean, \"version\": string, \"description\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 260,
    "kind": "file",
    "name": "app/plugins/internal/youtube-downloader.js",
    "content": "module.exports = function youtubeDownloadInit(APP) {\n\tAPP.http.raw.proxy('/youtube-downloader', 'http://localhost:3003');\n\n\treturn {\n\t\tversion: '0.0.1',\n\t\tdescription: 'An iFrame to host youtube-dl-ui'\n\t};\n};",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/internal/youtube-downloader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "function",
    "name": "exports",
    "memberof": "app/plugins/internal/youtube-downloader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/plugins/internal/youtube-downloader.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/plugins/internal/youtube-downloader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "APP",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"version\": string, \"description\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 262,
    "kind": "file",
    "name": "app/plugins/types.js",
    "content": "\n/**\n * The HTTP context object\n * @typedef {express.Router} Router\n * @type {object}\n * @property {Object} state\n * @property {Object} logger\n * @property {Object} config\n * @property {Object} dashboard\n * @property {Object} http\n */\n\n/**\n * The HTTP context object\n * @typedef {Object} HttpContext\n * @type {object}\n * @property {Object} noAuth\n * @property {Object} raw\n */\n\n/**\n * The APP object\n * @typedef {Object} PluginContext\n * @type {object}\n * @property {Object} state\n * @property {Object} logger\n * @property {Object} config\n * @property {Object} dashboard\n * @property {HttpContext} http\n */\n\n/**\n * The plugin object\n * @typedef {Object} Plugin\n * @property {string?} name\n * @property {string} version\n * @property {string} description\n * @property {string?} author\n */\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/plugins/types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 263,
    "kind": "typedef",
    "name": "Router",
    "memberof": "app/plugins/types.js",
    "static": true,
    "longname": "app/plugins/types.js~Router",
    "access": "public",
    "description": "The HTTP context object",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "dashboard",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "express.Router"
      ],
      "optional": false,
      "name": "Router"
    }
  },
  {
    "__docId__": 264,
    "kind": "typedef",
    "name": "HttpContext",
    "memberof": "app/plugins/types.js",
    "static": true,
    "longname": "app/plugins/types.js~HttpContext",
    "access": "public",
    "description": "The HTTP context object",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "noAuth",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "raw",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "HttpContext"
    }
  },
  {
    "__docId__": 265,
    "kind": "typedef",
    "name": "PluginContext",
    "memberof": "app/plugins/types.js",
    "static": true,
    "longname": "app/plugins/types.js~PluginContext",
    "access": "public",
    "description": "The APP object",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "logger",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "dashboard",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HttpContext"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "PluginContext"
    }
  },
  {
    "__docId__": 266,
    "kind": "typedef",
    "name": "Plugin",
    "memberof": "app/plugins/types.js",
    "static": true,
    "longname": "app/plugins/types.js~Plugin",
    "access": "public",
    "description": "The plugin object",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string?"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string?"
        ],
        "spread": false,
        "optional": false,
        "name": "author",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Plugin"
    }
  },
  {
    "__docId__": 267,
    "kind": "file",
    "name": "app/socket/auth.js",
    "content": "const config = require('@config');\nconst logger = require('@helpers/logger').createLogger('Socket Auth');\nconst jwt = require('jsonwebtoken');\n\nmodule.exports = function socketAuth(socketIO, verifyAPIToken, onAuthentication) {\n\tforbidNamespaceConnections(socketIO.parentNsps);\n\n\tsocketIO.on('connection', socket => {\n\t\t// Set the timeout after which the socket will be disconnected\n\t\t// if no authentication is reached before that.\n\t\tconst authTimeoutId = setTimeout(\n\t\t\t() =>\n\t\t\t\tsocket.emit(\n\t\t\t\t\t'unauthorized',\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'TIMEOUT'\n\t\t\t\t\t},\n\t\t\t\t\t() => socket.disconnect()\n\t\t\t\t),\n\t\t\t15000\n\t\t);\n\t\tsocket.authenticated = false;\n\n\t\tsocket.on('authenticate', ({ token }) => {\n\t\t\tclearTimeout(authTimeoutId);\n\n\t\t\t// Verify JWT received with the secret\n\t\t\tif (verifyAPIToken(token)) {\n\t\t\t\t// AUTH SUCCESSFUL\n\t\t\t\t// We set the authenticated var in the socket instance to true and\n\t\t\t\t// restore any connections the socket tried to make to namespaces.\n\t\t\t\tsocket.authenticated = true;\n\t\t\t\tonAuthentication(socket);\n\t\t\t\trestoreNamespaceConnection(socketIO.parentNsps, socket);\n\n\t\t\t\tsocket.emit('authenticated');\n\t\t\t} else {\n\t\t\t\tlogger.debug('Client couldnt be authorized');\n\n\t\t\t\t// Send the unauthorized event and disconnect\n\t\t\t\tsocket.emit(\n\t\t\t\t\t'unauthorized',\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'INVALID_TOKEN'\n\t\t\t\t\t},\n\t\t\t\t\t() => socket.disconnect()\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t});\n};\n\nfunction forbidNamespaceConnections(namespaces) {\n\tObject.values(namespaces).forEach(namespace => {\n\t\tnamespace.on('connect', socket => {\n\t\t\t// If the socket isnt authenticated, we remove it from the connected list.\n\t\t\t// Now it wont get any broadcasts.\n\t\t\tif (!socket.authenticated) {\n\t\t\t\tnamespace.sockets.delete(socket.id);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction restoreNamespaceConnection(namespaces, socket) {\n\tObject.values(namespaces).forEach(namespace => {\n\t\t// Go through all sockets in the namespace and see if our socket is in there.\n\t\t// If so, we restore the connection.\n\t\tif (\n\t\t\tObject.values(namespace.sockets).reduce(\n\t\t\t\t(found, s) => found || socket.id === s.id,\n\t\t\t\tfalse\n\t\t\t)\n\t\t) {\n\t\t\tnamespace.sockets.set(socket.id, socket);\n\t\t}\n\t});\n}\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/socket/auth.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 268,
    "kind": "variable",
    "name": "config",
    "memberof": "app/socket/auth.js",
    "static": true,
    "longname": "app/socket/auth.js~config",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/socket/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 269,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/socket/auth.js",
    "static": true,
    "longname": "app/socket/auth.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/socket/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 270,
    "kind": "variable",
    "name": "jwt",
    "memberof": "app/socket/auth.js",
    "static": true,
    "longname": "app/socket/auth.js~jwt",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/socket/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "exports",
    "memberof": "app/socket/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/socket/auth.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/socket/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "socketIO",
        "types": [
          "*"
        ]
      },
      {
        "name": "verifyAPIToken",
        "types": [
          "*"
        ]
      },
      {
        "name": "onAuthentication",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 272,
    "kind": "function",
    "name": "forbidNamespaceConnections",
    "memberof": "app/socket/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/socket/auth.js~forbidNamespaceConnections",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/socket/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "namespaces",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 273,
    "kind": "function",
    "name": "restoreNamespaceConnection",
    "memberof": "app/socket/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/socket/auth.js~restoreNamespaceConnection",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/socket/auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "params": [
      {
        "name": "namespaces",
        "types": [
          "*"
        ]
      },
      {
        "name": "socket",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "app/socket/index.js",
    "content": "/**\n * ### The Socket Module\n * The socket module handles most communications with clients.\n * Pure HTTP is actually used very rarely within Mission Control,\n * even though the interfaces for it are actually there.\n * <br>\n * Sockets have the advantage that they're real-time, which is very useful for home automation.\n * It also acts as a sort of networked message bus by broadcasting events.\n *\n * @module @socket\n * @requires socket.io\n * @requires jsonwebtoken\n */\n\nconst logger = require('@helpers/logger').createLogger('Socket', 'magenta');\nconst { Server } = require('socket.io');\nconst socketAuth = require('./auth');\n\n/**\n * Initialize the socket module.\n * @param  {Object} http A http server object.\n * @param  {Object} auth The auth object.\n */\nmodule.exports = function socket(state, http, auth) {\n\tconst server = new Server(http.server, {\n\t\t// cookie: {\n\t\t// \tname: 'io',\n\t\t// \thttpOnly: false\n\t\t// }\n\t});\n\n\tsocketAuth(server, auth.tokens.verify, client => {\n\t\tlet subscriptions = {};\n\n\t\tlogger.debug('A new client connected');\n\n\t\t// On connection, we emit a initial-state event.\n\t\t// The client can use this to populate its state.\n\t\tclient.emit('initial-state', {\n\t\t\tstate: state.getState()\n\t\t});\n\n\t\t// The client can call actions by emitting the action event.\n\t\t// It has to pass the action and associated data.\n\t\tclient.on('action', ({ action, data }, callback) => {\n\t\t\tlogger.debug(`Client requested action ${action}`);\n\n\t\t\ttry {\n\t\t\t\tstate.invokeAction(action, data);\n\n\t\t\t\tcallback({\n\t\t\t\t\terror: null\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tif (!e.isActionError) {\n\t\t\t\t\tlogger.error('Unknown error in action invocation', e);\n\t\t\t\t}\n\n\t\t\t\tcallback({\n\t\t\t\t\terror: {\n\t\t\t\t\t\tmessage: e.isActionError\n\t\t\t\t\t\t\t? e.message\n\t\t\t\t\t\t\t: 'Unknown error occurred'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// The client can emit a 'subscribe' event to subscribe to the state machines events.\n\t\t// These will then get relayed to the socket client.\n\t\tclient.on('subscribe', ({ event }) => {\n\t\t\tif (event in subscriptions) return;\n\n\t\t\tlogger.debug(`Client subscribed to ${event}.`);\n\n\t\t\tconst relayAllEvents = (actualEvent, data) => {\n\t\t\t\tclient.emit('all-events', {\n\t\t\t\t\tevent: actualEvent,\n\t\t\t\t\tdata\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst relaySingleEvent = data => {\n\t\t\t\tclient.emit(event, data);\n\t\t\t\t// log(`Emitting ${event} to client.`);\n\t\t\t};\n\n\t\t\t// If a wildcard is passed we also pass the events name in the payload.\n\t\t\tconst relayEvent =\n\t\t\t\tevent === '*' ? relayAllEvents : relaySingleEvent;\n\n\t\t\t// We save the returned method from the subscribe function to later unsubscribe.\n\t\t\tsubscriptions[event] = state.subscribe(event, relayEvent);\n\t\t});\n\n\t\t// When the client wants to unsubscribe remove the event\n\t\tclient.on('unsubscribe', ({ event }) => {\n\t\t\tif (!(event in subscriptions)) return;\n\n\t\t\tlogger.debug(`Unsubscribing client from event ${event}.`);\n\n\t\t\tsubscriptions[event]();\n\t\t\tdelete subscriptions[event];\n\t\t});\n\n\t\t// When the client disconnects unsubscribe all subscriptions\n\t\tclient.on('disconnect', () => {\n\t\t\tlogger.debug('A client disconnected.');\n\n\t\t\tObject.values(subscriptions).forEach(unsubscribe => unsubscribe());\n\t\t\tsubscriptions = null;\n\t\t});\n\t});\n\n\t// server.use((socket, next) => {\n\t// \tif (socket.handshake.query && socket.handshake.query.token) {\n\t// \t\tconst token = socket.handshake.query.token;\n\n\t// \t\ttry {\n\t// \t\t\t// Verify JWT received with the secret\n\t// \t\t\tconst payload = jwt.verify(token, config.auth.jwtSecret, {\n\t// \t\t\t\tissuer: config.auth.issuer,\n\t// \t\t\t\taudience: config.auth.audience\n\t// \t\t\t});\n\n\t// \t\t\tsocket.jwt = token;\n\t// \t\t\tsocket.jwtPayload = payload;\n\t// \t\t\t// Authenticated successfully\n\n\t// \t\t\tnext(null);\n\t// \t\t} catch (e) {\n\t// \t\t\tlog(\n\t// \t\t\t\t'Client couldnt be authorized. Invalid authentication token.'\n\t// \t\t\t);\n\t// \t\t\tnext(new Error('Unauthorized'));\n\t// \t\t}\n\t// \t} else {\n\t// \t\tlog('Client couldnt be authorized. Missing authentication token.');\n\t// \t\tnext(new Error('Unauthorized'));\n\t// \t}\n\t// });\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/socket/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/socket/index.js",
    "static": true,
    "longname": "app/socket/index.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/socket/index.js",
    "importStyle": null,
    "description": "### The Socket Module\nThe socket module handles most communications with clients.\nPure HTTP is actually used very rarely within Mission Control,\neven though the interfaces for it are actually there.\n<br>\nSockets have the advantage that they're real-time, which is very useful for home automation.\nIt also acts as a sort of networked message bus by broadcasting events.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": ""
      },
      {
        "tagName": "@socket\n",
        "tagValue": ""
      },
      {
        "tagName": "@requires",
        "tagValue": "socket.io"
      },
      {
        "tagName": "@requires",
        "tagValue": "jsonwebtoken"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 276,
    "kind": "variable",
    "name": "Server",
    "memberof": "app/socket/index.js",
    "static": true,
    "longname": "app/socket/index.js~Server",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/socket/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 277,
    "kind": "variable",
    "name": "socketAuth",
    "memberof": "app/socket/index.js",
    "static": true,
    "longname": "app/socket/index.js~socketAuth",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/socket/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "exports",
    "memberof": "app/socket/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/socket/index.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/socket/index.js",
    "importStyle": null,
    "description": "Initialize the socket module.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": "A http server object."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "auth",
        "description": "The auth object."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 279,
    "kind": "file",
    "name": "app/state/actions/bahn/update.js",
    "content": "module.exports.call = function(state, data) {\n\treturn {\n\t\t...state,\n\t\tbahn: data\n\t};\n};\n\nmodule.exports.validate = function(data) {\n\tif (typeof data === 'object') return data;\n\n\treturn false;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/actions/bahn/update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 280,
    "kind": "function",
    "name": "call",
    "memberof": "app/state/actions/bahn/update.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/bahn/update.js~call",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/bahn/update.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{...state: Object, \"bahn\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 281,
    "kind": "function",
    "name": "validate",
    "memberof": "app/state/actions/bahn/update.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/bahn/update.js~validate",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/bahn/update.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 282,
    "kind": "file",
    "name": "app/state/actions/homekit/modify-characteristics.js",
    "content": "/*\n\nService: {\n\tuniqueId: string,\n\tiid: string,\n\tname: string,\n\ttype: 'Switch',\n\tcharacteristics: [{}],\n\tvalues: []\n}\n\n*/\n\nmodule.exports.call = function MODIFY_CHARACTERISTICS(state) {\n\treturn state;\n};\n\nmodule.exports.validate = function validate() {\n\treturn true;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/actions/homekit/modify-characteristics.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "call",
    "memberof": "app/state/actions/homekit/modify-characteristics.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/homekit/modify-characteristics.js~call",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/homekit/modify-characteristics.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 284,
    "kind": "function",
    "name": "validate",
    "memberof": "app/state/actions/homekit/modify-characteristics.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/homekit/modify-characteristics.js~validate",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/homekit/modify-characteristics.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 285,
    "kind": "file",
    "name": "app/state/actions/homekit/set-initialized.js",
    "content": "module.exports.call = function SET_INIYIALIZED(state, { initialized = false }) {\n\treturn {\n\t\t...state,\n\t\thomekit: {\n\t\t\tinitialized: !!initialized\n\t\t}\n\t};\n};\n\nmodule.exports.validate = function validate(state) {\n\treturn state;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/actions/homekit/set-initialized.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 286,
    "kind": "function",
    "name": "call",
    "memberof": "app/state/actions/homekit/set-initialized.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/homekit/set-initialized.js~call",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/homekit/set-initialized.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"initialized\": *}"
        ],
        "defaultRaw": {
          "initialized": null
        },
        "defaultValue": "{\"initialized\":null}"
      }
    ],
    "return": {
      "types": [
        "{...state: Object, \"homekit\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "validate",
    "memberof": "app/state/actions/homekit/set-initialized.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/homekit/set-initialized.js~validate",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/homekit/set-initialized.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "app/state/actions/homekit/set-services.js",
    "content": "/*\n\nService: {\n\tuniqueId: string,\n\tiid: string,\n\tname: string,\n\ttype: 'Switch',\n\tcharacteristics: [{}],\n\tvalues: []\n}\n\n*/\n\nmodule.exports.call = function SET_SERVICES(state, { services = {}, reset = false }) {\n\tconst value = reset ? services : { ...state.homekit.services, ...services };\n\n\treturn {\n\t\t...state,\n\t\thomekit: {\n\t\t\t...state.homekit,\n\t\t\tservices: value\n\t\t}\n\t};\n};\n\nmodule.exports.validate = function validate(data) {\n\tconst allItemsComplete = Object.values(data.services)\n\t\t.filter(\n\t\t\tservice => \n\t\t\t\tservice.uniqueId \n\t\t\t\t&& service.iid \n\t\t\t\t&& service.name \n\t\t\t\t&& service.type \n\t\t\t\t&& Array.isArray(service.characteristics) \n\t\t\t\t&& Array.isArray(service.values)\n\t\t).length > 0;\n\n\tif (data.services && !allItemsComplete) {\n\t\treturn data;\n\t}\n\n\treturn false;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/actions/homekit/set-services.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "function",
    "name": "call",
    "memberof": "app/state/actions/homekit/set-services.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/homekit/set-services.js~call",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/homekit/set-services.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"services\": *, \"reset\": *}"
        ],
        "defaultRaw": {
          "services": null,
          "reset": null
        },
        "defaultValue": "{\"services\":null,\"reset\":null}"
      }
    ],
    "return": {
      "types": [
        "{...state: Object, \"homekit\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 290,
    "kind": "function",
    "name": "validate",
    "memberof": "app/state/actions/homekit/set-services.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/homekit/set-services.js~validate",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/homekit/set-services.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 291,
    "kind": "file",
    "name": "app/state/actions/index.js",
    "content": "/**\n * The Actions.\n *\n * Actions are function that update the state in a way.\n * Since the state is immutable, they create new instances every time.\n * Actions always have a namespace like 'NOTIFICATIONS' and a quick action\n * word like 'CREATE' concatenated by a ':'.\n *\n */\n\nconst actionIdToPath = actionId =>\n\tactionId\n\t\t.replace(/:/g, '/')\n\t\t.replace(/_/g, '-')\n\t\t.toLowerCase();\n\nconst rawActions = [\n\t/**\n\t * Play/pause the Kodi player.\n\t * @constant KODI:RUN\n\t * @property {string} command The command to execute.\n\t * @property {array} args The arguments to pass along.\n\t * @example demo-action-call\n\t */\n\t'KODI:RUN',\n\n\t/**\n\t * Create a notification\n\t * @constant NOTIFICATIONS:CREATE\n\t * @property {string} title The title of the notification.\n\t * @property {string} message The message of the notification.\n\t * @example demo-action-call\n\t */\n\t'NOTIFICATIONS:CREATE',\n\n\t/**\n\t * Delete a notification.\n\t * @constant NOTIFICATIONS:DELETE\n\t * @property {string} id The id.\n\t * @example demo-action-call\n\t */\n\t'NOTIFICATIONS:DELETE',\n\n\t/**\n\t * Mark a notification as read.\n\t * @constant NOTIFICATIONS:MARK-AS-READ\n\t * @property {string} id The id.\n\t * @example demo-action-call\n\t */\n\t'NOTIFICATIONS:MARK-AS-READ',\n\n\t/**\n\t * Set all notifications. Used for clear-all effects.\n\t * @constant NOTIFICATIONS:SET\n\t * @property {array} notifications An array of notifications.\n\t * @example demo-action-call\n\t */\n\t'NOTIFICATIONS:SET',\n\n\t/**\n\t * Update the system info statistics table.\n\t *\n\t * @constant SYSTEM-INFO:UPDATE\n\t */\n\t'SYSTEM-INFO:UPDATE'\n];\n\n// Take the actions and require their respective js files.\n// *\n//  * [actions description]\n//  * @type {Array<string>}\nconst actions = rawActions.reduce(\n\t(allActions, action) => ({\n\t\t...allActions,\n\t\t[action]: require(`./${actionIdToPath(action)}`)\n\t}),\n\t{}\n);\n\nmodule.exports = actions;\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/actions/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 292,
    "kind": "function",
    "name": "actionIdToPath",
    "memberof": "app/state/actions/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/index.js~actionIdToPath",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/index.js",
    "importStyle": null,
    "description": "The Actions.\n\nActions are function that update the state in a way.\nSince the state is immutable, they create new instances every time.\nActions always have a namespace like 'NOTIFICATIONS' and a quick action\nword like 'CREATE' concatenated by a ':'.",
    "lineNumber": 11,
    "params": [
      {
        "name": "actionId",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "name": "rawActions",
    "memberof": "app/state/actions/index.js",
    "static": true,
    "longname": "app/state/actions/index.js~rawActions",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "actions",
    "memberof": "app/state/actions/index.js",
    "static": true,
    "longname": "app/state/actions/index.js~actions",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 295,
    "kind": "file",
    "name": "app/state/actions/kodi/run.js",
    "content": "// prettier-ignore\nmodule.exports.call = function(state, data) {\n\treturn state;\n};\n\nmodule.exports.validate = function(data = {}) {\n\tif ('kodiId' in data && 'command' in data) return data;\n\t\n\treturn false;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/actions/kodi/run.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 296,
    "kind": "function",
    "name": "call",
    "memberof": "app/state/actions/kodi/run.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/kodi/run.js~call",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/kodi/run.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "validate",
    "memberof": "app/state/actions/kodi/run.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/kodi/run.js~validate",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/kodi/run.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "file",
    "name": "app/state/actions/notifications/create.js",
    "content": "const uuid = require('uuid/v4');\n\nmodule.exports.call = function CREATE_NOTIFICATION(state, { title, message }) {\n\treturn {\n\t\t...state,\n\t\tnotifications: [\n\t\t\t...state.notifications,\n\t\t\t{ title, message, unread: true, id: uuid(), date: new Date() }\n\t\t]\n\t};\n};\n\nmodule.exports.validate = function validate(data) {\n\tif ('title' in data) return data;\n\n\treturn false;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/actions/notifications/create.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "variable",
    "name": "uuid",
    "memberof": "app/state/actions/notifications/create.js",
    "static": true,
    "longname": "app/state/actions/notifications/create.js~uuid",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/notifications/create.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 300,
    "kind": "function",
    "name": "call",
    "memberof": "app/state/actions/notifications/create.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/notifications/create.js~call",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/notifications/create.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"title\": *, \"message\": *}"
        ],
        "defaultRaw": {
          "title": null,
          "message": null
        },
        "defaultValue": "{\"title\":null,\"message\":null}"
      }
    ],
    "return": {
      "types": [
        "{...state: Object, \"notifications\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "validate",
    "memberof": "app/state/actions/notifications/create.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/notifications/create.js~validate",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/notifications/create.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "app/state/actions/notifications/delete.js",
    "content": "module.exports.call = function DELETE_NOTIFICATION(state, { id }) {\n\tconst newNotifications = state.notifications.filter(\n\t\tnotification => notification.id !== id\n\t);\n\n\treturn {\n\t\t...state,\n\t\tnotifications: newNotifications\n\t};\n};\n\nmodule.exports.validate = function validate(data) {\n\tif ('id' in data) return data;\n\n\treturn false;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/actions/notifications/delete.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "function",
    "name": "call",
    "memberof": "app/state/actions/notifications/delete.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/notifications/delete.js~call",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/notifications/delete.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"id\": *}"
        ],
        "defaultRaw": {
          "id": null
        },
        "defaultValue": "{\"id\":null}"
      }
    ],
    "return": {
      "types": [
        "{...state: Object, \"notifications\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 304,
    "kind": "function",
    "name": "validate",
    "memberof": "app/state/actions/notifications/delete.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/notifications/delete.js~validate",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/notifications/delete.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 305,
    "kind": "file",
    "name": "app/state/actions/notifications/mark-as-read.js",
    "content": "module.exports.call = function(state, { id }) {\n\tconst newNotifications = state.notifications.map(notification =>\n\t\tnotification.id === id\n\t\t\t? { ...notification, unread: false }\n\t\t\t: notification\n\t);\n\n\treturn {\n\t\t...state,\n\t\tnotifications: newNotifications\n\t};\n};\n\nmodule.exports.validate = function(data) {\n\tif ('id' in data) return data;\n\n\treturn false;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/actions/notifications/mark-as-read.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 306,
    "kind": "function",
    "name": "call",
    "memberof": "app/state/actions/notifications/mark-as-read.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/notifications/mark-as-read.js~call",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/notifications/mark-as-read.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"id\": *}"
        ],
        "defaultRaw": {
          "id": null
        },
        "defaultValue": "{\"id\":null}"
      }
    ],
    "return": {
      "types": [
        "{...state: Object, \"notifications\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 307,
    "kind": "function",
    "name": "validate",
    "memberof": "app/state/actions/notifications/mark-as-read.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/notifications/mark-as-read.js~validate",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/notifications/mark-as-read.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 308,
    "kind": "file",
    "name": "app/state/actions/notifications/set.js",
    "content": "module.exports.call = function SET_NOTIFICATIONS(state, { notifications }) {\n\treturn {\n\t\t...state,\n\t\tnotifications\n\t};\n};\n\nmodule.exports.validate = function validate(data) {\n\tif ('notifications' in data && Array.isArray(data.notifications))\n\t\treturn data;\n\n\treturn false;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/actions/notifications/set.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 309,
    "kind": "function",
    "name": "call",
    "memberof": "app/state/actions/notifications/set.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/notifications/set.js~call",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/notifications/set.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"notifications\": *}"
        ],
        "defaultRaw": {
          "notifications": null
        },
        "defaultValue": "{\"notifications\":null}"
      }
    ],
    "return": {
      "types": [
        "{...state: Object, \"notifications\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 310,
    "kind": "function",
    "name": "validate",
    "memberof": "app/state/actions/notifications/set.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/notifications/set.js~validate",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/notifications/set.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 311,
    "kind": "file",
    "name": "app/state/actions/system-info/update.js",
    "content": "module.exports.call = function(state, data) {\n\treturn {\n\t\t...state,\n\t\tsystemInfo: data\n\t};\n};\n\nmodule.exports.validate = function(data) {\n\tif (typeof data === 'object') return data;\n\n\treturn false;\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/actions/system-info/update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 312,
    "kind": "function",
    "name": "call",
    "memberof": "app/state/actions/system-info/update.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/system-info/update.js~call",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/system-info/update.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{...state: Object, \"systemInfo\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 313,
    "kind": "function",
    "name": "validate",
    "memberof": "app/state/actions/system-info/update.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/actions/system-info/update.js~validate",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/actions/system-info/update.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 314,
    "kind": "file",
    "name": "app/state/events/ActionEvent.js",
    "content": "// const MissionControlEvent = require('./MissionControlEvent');\n\n// class ActionEvent extends MissionControlEvent {\n// \t/**\n// \t * @param  {String} action - The action key.\n// \t * @param  {Object} actionData - The data that was passed along with the action when evoked.\n// \t * @param  {Object} stateDiff - A diff of the state before execution of the action and after.\n// \t * @return {ActionEvent}\n// \t */\n// \tconstructor(action, actionData, stateDiff) {\n// \t\tsuper();\n\n// \t\t/**\n// \t\t * The name/key of the action that was evoked.\n// \t\t * @type {String}\n// \t\t */\n// \t\tthis.action = action;\n\n// \t\t/**\n// \t\t * The data that was passed along with the action when evoked.\n// \t\t * @type {Object}\n// \t\t */\n// \t\tthis.actionData = actionData;\n\n// \t\t/**\n// \t\t * A diff of the state before execution of the action and after.\n// \t\t * @type {Object}\n// \t\t */\n// \t\tthis.stateDiff = stateDiff;\n// \t}\n// }\n\n// const a = new ActionEvent('eventname', { data: 0 }, { diff: 0 });\n// console.log(ActionEvent.fromJSON(ActionEvent, a.json()));\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/events/ActionEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 315,
    "kind": "file",
    "name": "app/state/events/MissionControlEvent.js",
    "content": "module.exports = class MissionControlEvent {\n\tconstructor(data = {}) {\n\t\tObject.assign(this, data);\n\t}\n\n\t/**\n\t * Retrieve the state for the event.\n\t * @return {Object}\n\t */\n\tstate() {}\n\n\t/**\n\t * Convert this class into JSON data.\n\t * @return {String}\n\t */\n\tjson() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\t/**\n\t * Convert this class into a pure object.\n\t * @return {Object}\n\t */\n\tobject() {\n\t\treturn JSON.parse(this.json());\n\t}\n\n\t/**\n\t * @param {Object} jsonData - The data to unserialize from.\n\t * @return {Boolean} If this function returns true, the jsonData will automagically be assigned to the class instance. Override the method and explicitly return false here to turn that off.\n\t */\n\tonUnserialize(jsonData) {\n\t\tjsonData;\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param  {String} json - The JSON data to unserialize.\n\t * @return {Class} The class that was unserialized from json.\n\t */\n\tstatic fromJSON(eventClassType, json) {\n\t\tconst data = JSON.parse(json);\n\t\tconst eventClass = new eventClassType();\n\n\t\tif (eventClass.onUnserialize(data)) {\n\t\t\tObject.assign(eventClass, data);\n\t\t}\n\n\t\treturn eventClass;\n\t}\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/events/MissionControlEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 316,
    "kind": "class",
    "name": "exports",
    "memberof": "app/state/events/MissionControlEvent.js",
    "static": true,
    "longname": "app/state/events/MissionControlEvent.js~exports",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/events/MissionControlEvent.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 317,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/state/events/MissionControlEvent.js~exports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/state/events/MissionControlEvent.js~exports#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "state",
    "memberof": "app/state/events/MissionControlEvent.js~exports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/state/events/MissionControlEvent.js~exports#state",
    "access": "public",
    "description": "Retrieve the state for the event.",
    "lineNumber": 10,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "json",
    "memberof": "app/state/events/MissionControlEvent.js~exports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/state/events/MissionControlEvent.js~exports#json",
    "access": "public",
    "description": "Convert this class into JSON data.",
    "lineNumber": 16,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "object",
    "memberof": "app/state/events/MissionControlEvent.js~exports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/state/events/MissionControlEvent.js~exports#object",
    "access": "public",
    "description": "Convert this class into a pure object.",
    "lineNumber": 24,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 321,
    "kind": "method",
    "name": "onUnserialize",
    "memberof": "app/state/events/MissionControlEvent.js~exports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/state/events/MissionControlEvent.js~exports#onUnserialize",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "jsonData",
        "description": "The data to unserialize from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "If this function returns true, the jsonData will automagically be assigned to the class instance. Override the method and explicitly return false here to turn that off."
    }
  },
  {
    "__docId__": 322,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "app/state/events/MissionControlEvent.js~exports",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/events/MissionControlEvent.js~exports.fromJSON",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "The JSON data to unserialize."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "The class that was unserialized from json."
    }
  },
  {
    "__docId__": 323,
    "kind": "file",
    "name": "app/state/index.js",
    "content": "/**\n * ### The State Machine, heart and soul of mission control.\n *\n * The state maching is responsible for keeping the state for lights etc.\n * It works in a similar way that React/Redux works. But its simplified in that\n * reducers and actions are basically merged.\n * We have a store that holds all the data. This store is immutable.\n * To update data in the store, we need to define actions.\n * The actions will take the old state, and create a new one with updated data.\n * When an action is run / data is updated, the state machine's event emitter\n * sends a trigger that data has changed.\n * This will be broadcasted to internal services inside mission control or through\n * a Node-RED component. Node-RED flows can then update accordingly.\n *\n * This means, that the state machine resembles the SSOT (single source of truth).\n *\n * You can subscribe to specific data points in the state machine e.g.:\n * This will only trigger when any data within the lights.desk object changes.\n *\n * Action names are always all caps to reduce errors when calling them.\n * An action cannot have side effects. HTTP requests and similar async tasks\n * are handled outside the state machine, to reduce complexity.\n */\n\n// const config = require('@config');\nconst EventEmitter = require('eventemitter2');\nconst diff = require('object-diff');\n\n// const ActionEvent = require('@state/events/ActionEvent');\n\nconst logger = require('@helpers/logger').createLogger('State', 'blueBright');\n\nconst emitter = new EventEmitter({\n\twildcard: true,\n\tdelimiter: ':'\n});\n\nlet actions = {};\nlet state = require('./initial-state');\n\n/**\n * Register a reducer for a given state action\n * @param {string} action The action to register a reducer for\n * @param {Function} reducer The reducer function\n * @param {Function} validate The data validation function\n */\nfunction registerReducer(action, reducer, validate) {\n\tactions[action] = {\n\t\treducer,\n\t\tvalidate\n\t};\n}\n\n/**\n * Subscribe to mission control events.\n *\n * This function is used to subscribe to any event within the server.\n * If the passed event is '*' the listener will be subscribed to all events.\n *\n * @param  {String} event - The event to subscribe to. Can be '*' to subscribe to all events.\n * @param  {Function} callback - The callback / listener function.\n * @return {Function} A function to remove the listener when called.\n */\nfunction subscribe(event, callback) {\n\t// Subscribe to event\n\tif (event === '*') {\n\t\temitter.onAny(callback);\n\t} else {\n\t\temitter.on(event, callback);\n\t}\n\n\t// Return function to unsubscribe\n\treturn () => {\n\t\tif (event === '*') {\n\t\t\temitter.offAny(callback);\n\t\t} else {\n\t\t\temitter.removeListener(event, callback);\n\t\t}\n\t};\n}\n\n// The call method will run an action on the state with given arguments.\n/**\n * Evoke an action.\n *\n * This method will run an action on the state machine.\n * Every action has a function and a validator.\n * This function first runs the validator to see if the incoming data is valid\n * and then executed the action function.\n *\n * @param {String} actionKey - The action to evoke.\n * @param {Object} data - The data object to pass along to the action reducer/handler.\n *\n * @emits 'update'\n */\nfunction invokeAction(actionKey, data) {\n\tlogger.debug(`Running action ${actionKey} with data: ${JSON.stringify(\n\t\tdata\n\t)}`);\n\n\t// Normalize action name\n\tactionKey = actionKey.toUpperCase();\n\n\t// Throw an error if action doesn't exist\n\tif (!(actionKey in actions)) {\n\t\tlogger.error(`Could not find action '${actionKey}'`);\n\t\treturn;\n\t}\n\n\tconst action = actions[actionKey];\n\n\tif (!action.validate(data)) {\n\t\tlogger.error(`Data for action '${actionKey}' is invalid`);\n\t\treturn;\n\t}\n\n\t// Run the action with the old state\n\tconst oldState = state;\n\tconst newState = action.reducer(oldState, data);\n\n\tif (!newState) {\n\t\tlogger.error(`Reducer for action ${actionKey} must return a state`);\n\t\treturn;\n\t}\n\n\t// We extend an empty object to remove all ties to the old state\n\t/*\n\t * !!! ONLY TIME WE EVER SET STATE VARIABLE !!!\n\t */\n\tstate = Object.assign({}, newState);\n\n\t// Get a diff of the old and new state.\n\t// Using that diff we determine what the emitter should emit.\n\t// The state provided in update events that are limited to a key is\n\t// only the state that was updated.\n\tconst stateDiff = diff(oldState, newState);\n\tObject.keys(stateDiff).forEach(changedKey => {\n\t\temitter.emit(`update:${changedKey}`, {\n\t\t\tstate: stateDiff\n\t\t});\n\t});\n\n\t// Emit a general state update event\n\temitter.emit('update', {\n\t\tstate: stateDiff,\n\t\taction: actionKey,\n\t\tdiff: Object.keys(stateDiff)\n\t});\n\temitter.emit(`action:${actionKey}`, {\n\t\tstate: newState,\n\t\taction: actionKey,\n\t\tactionData: data,\n\t\tdiff: Object.keys(stateDiff)\n\t});\n\t\n\n\t\n\n\t// const actionEvent = new ActionEvent(actionKey, data, diff);\n\t// emitter.emit(`_action:${actionKey}`, actionEvent);\n}\n\n/**\n * Emit an event to the state machine message bus.\n *\n * @param  {String} event - The event type to be emitted.\n * @param  {Object} data - The data to be emitted as a payload.\n */\nfunction emitEvent(event, data) {\n\temitter.emit(event, data);\n}\n\n/**\n * Get the current state of the state machine.\n * @return {Object}\n */\nfunction getState() {\n\treturn state;\n}\n\nclass ActionError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\n\t\tthis.isActionError = true;\n\t}\n}\n\nmodule.exports = {\n\tregisterReducer,\n\tsubscribe,\n\tinvokeAction,\n\temitEvent,\n\tgetState,\n\tActionError\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 324,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "app/state/index.js",
    "static": true,
    "longname": "app/state/index.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": "### The State Machine, heart and soul of mission control.\n\nThe state maching is responsible for keeping the state for lights etc.\nIt works in a similar way that React/Redux works. But its simplified in that\nreducers and actions are basically merged.\nWe have a store that holds all the data. This store is immutable.\nTo update data in the store, we need to define actions.\nThe actions will take the old state, and create a new one with updated data.\nWhen an action is run / data is updated, the state machine's event emitter\nsends a trigger that data has changed.\nThis will be broadcasted to internal services inside mission control or through\na Node-RED component. Node-RED flows can then update accordingly.\n\nThis means, that the state machine resembles the SSOT (single source of truth).\n\nYou can subscribe to specific data points in the state machine e.g.:\nThis will only trigger when any data within the lights.desk object changes.\n\nAction names are always all caps to reduce errors when calling them.\nAn action cannot have side effects. HTTP requests and similar async tasks\nare handled outside the state machine, to reduce complexity.",
    "lineNumber": 26,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 325,
    "kind": "variable",
    "name": "diff",
    "memberof": "app/state/index.js",
    "static": true,
    "longname": "app/state/index.js~diff",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 326,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/state/index.js",
    "static": true,
    "longname": "app/state/index.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 327,
    "kind": "variable",
    "name": "emitter",
    "memberof": "app/state/index.js",
    "static": true,
    "longname": "app/state/index.js~emitter",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 328,
    "kind": "variable",
    "name": "actions",
    "memberof": "app/state/index.js",
    "static": true,
    "longname": "app/state/index.js~actions",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 329,
    "kind": "variable",
    "name": "state",
    "memberof": "app/state/index.js",
    "static": true,
    "longname": "app/state/index.js~state",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 330,
    "kind": "function",
    "name": "registerReducer",
    "memberof": "app/state/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/index.js~registerReducer",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": "Register a reducer for a given state action",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "The action to register a reducer for"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "reducer",
        "description": "The reducer function"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "validate",
        "description": "The data validation function"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 331,
    "kind": "function",
    "name": "subscribe",
    "memberof": "app/state/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/index.js~subscribe",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": "Subscribe to mission control events.\n\nThis function is used to subscribe to any event within the server.\nIf the passed event is '*' the listener will be subscribed to all events.",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The event to subscribe to. Can be '*' to subscribe to all events."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback / listener function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A function to remove the listener when called."
    },
    "ignore": true
  },
  {
    "__docId__": 332,
    "kind": "function",
    "name": "invokeAction",
    "memberof": "app/state/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/index.js~invokeAction",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": "Evoke an action.\n\nThis method will run an action on the state machine.\nEvery action has a function and a validator.\nThis function first runs the validator to see if the incoming data is valid\nand then executed the action function.",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "actionKey",
        "description": "The action to evoke."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data object to pass along to the action reducer/handler."
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "'update'"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 333,
    "kind": "function",
    "name": "emitEvent",
    "memberof": "app/state/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/index.js~emitEvent",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": "Emit an event to the state machine message bus.",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The event type to be emitted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to be emitted as a payload."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 334,
    "kind": "function",
    "name": "getState",
    "memberof": "app/state/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "app/state/index.js~getState",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": "Get the current state of the state machine.",
    "lineNumber": 177,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 335,
    "kind": "class",
    "name": "ActionError",
    "memberof": "app/state/index.js",
    "static": true,
    "longname": "app/state/index.js~ActionError",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/state/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 181,
    "undocument": true,
    "interface": false,
    "extends": [
      "Error"
    ],
    "ignore": true
  },
  {
    "__docId__": 336,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/state/index.js~ActionError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/state/index.js~ActionError#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 182,
    "undocument": true
  },
  {
    "__docId__": 337,
    "kind": "member",
    "name": "isActionError",
    "memberof": "app/state/index.js~ActionError",
    "static": false,
    "longname": "app/state/index.js~ActionError#isActionError",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "file",
    "name": "app/state/initial-state.js",
    "content": "/**\n * The initial state object for the state machine.\n * @name  Initial State\n * @module @state/initial-state\n * @since 1.0.0\n */\n\n/**\n * The initial state object for the state machine.\n *\n * @todo  Save state and load on launch.\n *\n * @type {Object}\n */\nmodule.exports = {\n\tvideoQueue: [],\n\tnotifications: [],\n\tspotify: {\n\t\taccessToken: null,\n\t\texpiresAt: null\n\t},\n\tscenes: {\n\t\tmovie: { name: 'Movie Night', active: false },\n\t\tchill: { name: 'Chill', active: false }\n\t},\n\thomekit: {\n\t\tservices: {}\n\t},\n\tlayout: []\n};\n",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/state/initial-state.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 339,
    "kind": "file",
    "name": "app/sync/index.js",
    "content": "/**\n * ### Sync – The heart of mission-control\n *\n * Sync is the main logic of mission control. It hosts the global event loop and\n * is responsible for managing state and synchronising it with connected clients.\n * The state can include like system information, HomeKit devices or anything \n * plugins wish to make available to all clients.\n *\n * The event loop holds two types of event:\n *  - base-event\n * \t- request\n *\n * A base-event handles like any other event. \n * It will be called but won't want any response back.\n * Event handlers will be called asynchronously and no error is thrown if an\n * event doesn't have a listener.\n *\n * A request is an event that will expect a response.\n * If no event handler can be found or an error occurs in one of them,\n * the response will be an error object which clients can handle accordingly.\n *\n * **Note**: the sync engine does NOT send request events to other clients.\n * These events get filtered out, so request information leaks.\n * However, all base-events are broadcasted to all connected clients.\n *\n * When the State is changed, a `state:updated` base-event is dispatched,\n * with the changed state inside.\n * **Note**: There currently is no validation in state updates to detect data corruption\n * for example by events arriving out of sync. So far this has not led to any problems,\n * but these could definitely occur if enough users or actions get executed silmutaneously.\n * This should be looked at in the future @todo.\n *\n * To change the state, a `setState` function is exposed which is a bit like React's.\n * It takes one argument, the updated state, and will run `Object.assign` to the current\n * state to only update changed values.\n * **Note**: Bear in mind, that this only works one level deep.\n *\n * So you'll still need to do this:\n * ```js\n * setState({\n * \t\tmyPlugin: {\n * \t\t\t...myPlugin,\n * \t\t\tchange: 'bla'\n * \t\t}\n * });\n * ```\n */\n\nconst EventEmitter = require('eventemitter2');\nconst diff = require('object-diff');\n\n// const ActionEvent = require('@state/events/ActionEvent');\n\nconst logger = require('@helpers/logger').createLogger('State', 'blueBright');\n\nconst emitter = new EventEmitter({\n\twildcard: true,\n\tdelimiter: ':'\n});\n\nmodule.exports = {\n\n};\n\nconst eventBus = require('eventemitter2');",
    "static": true,
    "longname": "/Users/mat/Projects/mission-control/app/sync/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 340,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "app/sync/index.js",
    "static": true,
    "longname": "app/sync/index.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/sync/index.js",
    "importStyle": null,
    "description": "### Sync – The heart of mission-control\n\nSync is the main logic of mission control. It hosts the global event loop and\nis responsible for managing state and synchronising it with connected clients.\nThe state can include like system information, HomeKit devices or anything \nplugins wish to make available to all clients.\n\nThe event loop holds two types of event:\n - base-event\n\t- request\n\nA base-event handles like any other event. \nIt will be called but won't want any response back.\nEvent handlers will be called asynchronously and no error is thrown if an\nevent doesn't have a listener.\n\nA request is an event that will expect a response.\nIf no event handler can be found or an error occurs in one of them,\nthe response will be an error object which clients can handle accordingly.\n\n**Note**: the sync engine does NOT send request events to other clients.\nThese events get filtered out, so request information leaks.\nHowever, all base-events are broadcasted to all connected clients.\n\nWhen the State is changed, a `state:updated` base-event is dispatched,\nwith the changed state inside.\n**Note**: There currently is no validation in state updates to detect data corruption\nfor example by events arriving out of sync. So far this has not led to any problems,\nbut these could definitely occur if enough users or actions get executed silmutaneously.\nThis should be looked at in the future @todo.\n\nTo change the state, a `setState` function is exposed which is a bit like React's.\nIt takes one argument, the updated state, and will run `Object.assign` to the current\nstate to only update changed values.\n**Note**: Bear in mind, that this only works one level deep.\n\nSo you'll still need to do this:\n```js\nsetState({\n\t\tmyPlugin: {\n\t\t\t...myPlugin,\n\t\t\tchange: 'bla'\n\t\t}\n});\n```",
    "lineNumber": 49,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 341,
    "kind": "variable",
    "name": "diff",
    "memberof": "app/sync/index.js",
    "static": true,
    "longname": "app/sync/index.js~diff",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/sync/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 342,
    "kind": "variable",
    "name": "logger",
    "memberof": "app/sync/index.js",
    "static": true,
    "longname": "app/sync/index.js~logger",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/sync/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 343,
    "kind": "variable",
    "name": "emitter",
    "memberof": "app/sync/index.js",
    "static": true,
    "longname": "app/sync/index.js~emitter",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/sync/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 344,
    "kind": "variable",
    "name": "eventBus",
    "memberof": "app/sync/index.js",
    "static": true,
    "longname": "app/sync/index.js~eventBus",
    "access": "public",
    "export": false,
    "importPath": "@capevace/mission-control/app/sync/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "<div align=\"center\">\n\t<a href=\"https://mateffy.me/mission-control-project\">\n\t\t<img src=\"resources/icon-web.png\">\n\t</a>\n\t<h1>Mission Control</h1>\n\t<p>\n\t\tBeautiful home dashboard software built on Node.js \n\t</p>\n\t<p>\n\t\t<a href=\"https://mateffy.me/mission-control-project\">Project Homepage</a>\n\t\t<span>&nbsp;|&nbsp;</span>\n\t\t<a href=\"https://mateffy.me/mission-control\">Docs</a>\n\t</p>\n</div>\n\n<br>\n\nWhen you start setting up software for your home – be it home automation, a NAS system or something else – you’ll end up having a few different dashboards for control, that are all kind of ugly anyway. That’s where Mission Control comes in. It is a beatutiful and easy-to-configure dashboard system for your home!\n\n## Features\n\n- Control your HomeKit devices on the dashboard\n- Embeddable file browser, youtube downloader and Spotify player\n- Sleek, customizable UI\n\n## Installation\n\n**Install mission-control and the single-sign-on auth server.** Unless reconfigured, mission control will launch a single-sign-on server as a node subprocess.\n\n```sh\n$ npm install -g @capevace/mission-control@next\n```\n\n## Usage\n\nYou can now start the server like you would any binary.\n\n```sh\n$ mission-control --version\nv2.0.0-rc6\n```\n\n### Options\n\n```\nUsage: mission-control [options]\n\nOptions:\n  -V, --version       output the version number\n  -u, --url <url>     the url mission control is reachable at\n  -p, --port <port>   the port to use for mission control\n  -n, --no-sso        disable internal auth server process (to use own)\n  --auth-url <url>    the url to use for the single-sign-on server\n  --auth-port <port>  the port to use for the single-sign-on server\n  -h, --help          display help for command\n```\n\n### Config\n\nA config file for mission-control will be created at `$HOME_DIR/.mission-control/config`. This can also be used to configure mission-control. However, options passed as command line arguments override settings in this file.\n\n## Screenshots\n\n<img src=\"resources/screenshot.png\">\n\n## Changelog\n\n### Version 2.0.0 (pre-release)\n\n- Completely redesigned dashboard UI\n- Introduction of a flexible plugin system\n- Authentication is now handled by Mission Control itself, [single-sign-on](https://github.com/capevace/single-sign-on) is no longer required\n- Users now have profiles, which will be integrated with a solid permission system\n- Tons of bug fixes\n\n### Version 0.5.4\n\n- Rewrote logging system\n\n### Version 0.5.3\n\n- Added COVID widget to dashboard\n\n### Version 0.5.2\n\n- Fixed bahn algorithm skipping not displaying trains with SEV present\n\n### Version 0.5.1\n\n- Fixed dashboard layout now being loaded from database correctly\n\n### Version 0.5.0\n\n- New Dashboard is now customizeable\n\n### Version 0.4.2\n\n- Fixes error preventing the auth proxy from returning properly\n\n### Version 0.4.1\n\n- Fixes some minor security issues with dependencies\n\n### Version 0.4.0\n\n- The SSO server is now being proxied by default. This can be disabled with the `--no-proxy` option or by disabling it in the config file.\n- Instead of localhost, the default url is now the local ip\n\n## FAQ\n\n### Running Mission Control on port 80\n\nOn Linux, running an http server on port 80 requires root priviliges. Generally this isn't a problem as you can simply `sudo mission-control -p 80` which works, but this approach falls apart when using systemd.\n\nI found this workaround which seems to be the safest option to use instead:\n\n```sh\nsudo apt-get install libcap2-bin\nsudo setcap 'cap_net_bind_service=+ep' /usr/bin/node # Replace path to node binary\n```\n\n## Authors\n\nLukas Mateffy – [@Capevace](https://twitter.com/capevace) – [mateffy.me](https://mateffy.me)\n\nDistributed under the MIT license. See `LICENSE` for more information.\n\n## Contributing\n\n1. Fork it (<https://github.com/capevace/mission-control/fork>)\n2. Create your feature branch (`git checkout -b feature/fooBar`)\n3. Commit your changes (`git commit -am 'Add some fooBar'`)\n4. Push to the branch (`git push origin feature/fooBar`)\n5. Create a new Pull Request\n",
    "longname": "/Users/mat/Projects/mission-control/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n    \"name\": \"@capevace/mission-control\",\n    \"version\": \"2.0.0-rc8\",\n    \"description\": \"Beautiful smart home dashboard software built on Node.js\",\n    \"main\": \"app/index.js\",\n    \"scripts\": {\n        \"start\": \"node scripts/start.js\",\n        \"lint\": \"eslint app\",\n        \"docs-tutorials-for-later\": \"jsdoc -r app -d docs -c jsdoc.config.js -u tutorials --package ./package.json \",\n        \"docs\": \"jsdoc -d docs -c jsdoc.config.js -r app ./README.md\",\n        \"ui\": \"cp -r ../mission-control-dashboard/dist/production/. resources/dashboard-ui/\",\n        \"spotify-ui\": \"cp -r ../mission-control-spotify/dist/. resources/spotify-ui/\",\n        \"mobile-ui\": \"babel resources/dashboard-ui/index.js --out-file resources/dashboard-ui/mobile.js\"\n    },\n    \"browserslist\": \"defaults, last 1 version, >1%, ios_saf 9, ios_saf 9.3\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"git+https://github.com/capevace/mission-control.git\"\n    },\n    \"bin\": {\n        \"mission-control\": \"scripts/start.js\"\n    },\n    \"author\": \"Lukas Mateffy (@Capevace)\",\n    \"license\": \"MIT\",\n    \"bugs\": {\n        \"url\": \"https://github.com/capevace/hal-6900-mission-control/issues\"\n    },\n    \"homepage\": \"https://github.com/capevace/hal-6900-mission-control#readme\",\n    \"dependencies\": {\n        \"@oznu/hap-client\": \"^1.6.0\",\n        \"bcrypt\": \"^5.0.1\",\n        \"body-parser\": \"^1.18.3\",\n        \"chalk\": \"^2.4.2\",\n        \"cli-progress\": \"^3.9.0\",\n        \"commander\": \"^6.1.0\",\n        \"connect-flash\": \"^0.1.1\",\n        \"db-hafas\": \"^5.0.2\",\n        \"eventemitter2\": \"^5.0.1\",\n        \"express\": \"^5.0.0-alpha.8\",\n        \"express-session\": \"^1.16.1\",\n        \"html-minifier\": \"^4.0.0\",\n        \"http-proxy-middleware\": \"^0.20.0\",\n        \"internal-ip\": \"^6.1.0\",\n        \"joi\": \"^17.4.0\",\n        \"jsonwebtoken\": \"^8.5.1\",\n        \"module-alias\": \"^2.2.0\",\n        \"object-diff\": \"0.0.4\",\n        \"on-finished\": \"^2.3.0\",\n        \"passport\": \"^0.4.0\",\n        \"passport-jwt\": \"^4.0.0\",\n        \"passport-local\": \"^1.0.0\",\n        \"public-ip\": \"^3.0.0\",\n        \"qrcode-terminal\": \"^0.12.0\",\n        \"querystring\": \"^0.2.0\",\n        \"rc\": \"^1.2.8\",\n        \"session-file-store\": \"^1.5.0\",\n        \"socket.io\": \"^4.0.0\",\n        \"socketio-auth\": \"^0.1.1\",\n        \"superagent\": \"^5.0.2\",\n        \"systeminformation\": \"^5.6.12\",\n        \"uuid\": \"^3.3.2\"\n    },\n    \"devDependencies\": {\n        \"@babel/cli\": \"^7.11.5\",\n        \"@babel/core\": \"^7.11.5\",\n        \"@babel/preset-env\": \"^7.11.5\",\n        \"esdoc\": \"^1.1.0\",\n        \"esdoc-brand-plugin\": \"^1.0.1\",\n        \"esdoc-custom-theme\": \"^1.4.2\",\n        \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n        \"esdoc-inject-style-plugin\": \"^1.0.0\",\n        \"esdoc-publish-html-plugin\": \"^1.1.2\",\n        \"esdoc-standard-plugin\": \"^1.0.0\",\n        \"eslint\": \"^5.16.0\",\n        \"eslint-config-prettier\": \"^4.3.0\",\n        \"eslint-plugin-import\": \"^2.17.2\",\n        \"eslint-plugin-prettier\": \"^3.1.0\",\n        \"jsdoc\": \"^3.6.3\"\n    },\n    \"eslintConfig\": {\n        \"env\": {\n            \"node\": true,\n            \"commonjs\": true,\n            \"es6\": true\n        },\n        \"extends\": [\n            \"eslint:recommended\",\n            \"prettier\"\n        ],\n        \"globals\": {\n            \"Atomics\": \"readonly\",\n            \"SharedArrayBuffer\": \"readonly\"\n        },\n        \"parserOptions\": {\n            \"ecmaVersion\": 2018\n        },\n        \"rules\": {\n            \"linebreak-style\": [\n                \"error\",\n                \"unix\"\n            ],\n            \"semi\": [\n                \"error\",\n                \"always\"\n            ]\n        }\n    },\n    \"directories\": {\n        \"doc\": \"docs\"\n    },\n    \"_moduleAliases\": {\n        \"@root\": \"./\",\n        \"@config\": \"app/config\",\n        \"@database\": \"app/database\",\n        \"@state\": \"app/state\",\n        \"@helpers\": \"app/helpers\",\n        \"@services\": \"app/services\",\n        \"@http\": \"app/http\"\n    }\n}\n",
    "longname": "/Users/mat/Projects/mission-control/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": null,
    "longname": "",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/mat/Projects/mission-control/tutorials/test.md",
    "name": "./tutorials/test.md",
    "content": "# Tutorial\nTest tutorial\n\n```js\nconsole.log('hello')\n```",
    "static": true,
    "access": "public"
  }
]